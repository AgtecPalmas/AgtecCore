version: '3.4'

services:
  database:
    image: postgres:13.4-alpine
    restart: always
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      - LC_ALL=C.UTF-8
      - POSTGRES_DB={{cookiecutter.project_slug}}_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  web:
    image: {{cookiecutter.project_slug}}
    environment:
      - DB_NAME={{cookiecutter.project_slug.lower()}}_db
      - DB_HOST={{cookiecutter.project_slug.lower()}}_database
      - DB_PASSWORD=2LiyBoLHeHo5yGfxan8euHGIzEEzIs
      - DB_ENGINE=django.db.backends.postgresql
      - DB_USER={{cookiecutter.project_slug.lower()}}_dbmanager_2LiyBoLHeHo5yG
      - DB_PORT=5432
      - SECRET_KEY=NYPmGeU11uQ96YQtX9UjOZ_EuAGsuJltGJt5XBrXt0HQhgShCP7KIWlLFgxtZDhl0z4
      - ALLOWED_HOSTS=.localhost,*
      - DEBUG=True
      - SENTRY_DNS=""
      - API_PATH=http://localhost:8080/
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - EMAIL_PASSWORD=''
      - EMAIL_LOGIN=''
      - EMAIL_SMTP=''
      - EMAIL_PORTA=''
      - EMAIL_DESTINO=''
      - FCM_KEY=''
      - GOOGLE_API_KEY=''
      - HORAS_SEM_ATENDIMENTO=19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7, 12
      - DIAS_DA_SEMANA=0, 1, 2, 3, 4
      - SENHA_PADRAO=''
      - CSRF_TRUSTED_ORIGINS=''
    build:
      context: .
      dockerfile: ./Dockerfile
    command: [ "python", "manage.py", "runserver", "0.0.0.0:8000" ]
    volumes:
      - .:/app
    ports:
      - 8000:8000
    depends_on:
      - database
