{"version":3,"file":"partial/js/behavior/scrim.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;UCVA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;ACNA;AACe;AACf;AACA;AACA,aAAa,QAAQ;AACrB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/webpack/bootstrap","webpack://core/webpack/runtime/define property getters","webpack://core/webpack/runtime/hasOwnProperty shorthand","webpack://core/webpack/runtime/make namespace object","webpack://core/./src/partial/js/behavior/scrim.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/** Classe para o comportamento scrim */\nexport default class Scrim {\n  /**\n   * Instancia um comportamento scrim\n   * @param {object} - Objeto de configuração inicial para destructuring\n   * @property {object} trigger - Elemento DOM que representa o acionador do comportmento scrim\n   * @property {string} closeElement - Elemento Dom do trigger que fecha o scrim\n   */\n  constructor({ trigger, closeElement }) {\n    this.trigger = trigger\n    this.closeElement = this.elementHideScrim(closeElement)\n    if (this.trigger) {\n      this.setBehavior()\n    }\n  }\n\n  /**\n   * Alterna o estado de visualização do comportamento scrim\n   * @private\n   */\n  showScrim() {\n    if (this.trigger) {\n      this.trigger.classList.add('active')\n      this.trigger.setAttribute('data-visible', true)\n      this.trigger.setAttribute('aria-expanded', true)\n    }\n  }\n  /**\n   * Alterna o estado de escondido do comportamento scrim\n   * @private\n   */\n  hideScrim() {\n    this.trigger.classList.remove('active')\n    this.trigger.setAttribute('data-visible', false)\n    this.trigger.setAttribute('aria-expanded', false)\n  }\n\n  /**\n   * Seta o elemento Dom que vai fechar o scrim\n   * @public\n   */\n  elementHideScrim(element) {\n    if (this.trigger.querySelectorAll(element)) {\n      this.trigger.querySelectorAll(element).forEach((element) => {\n        this.closeElement = element\n        this._setCloseClick()\n      })\n    }\n  }\n\n  /**\n   * Adiciona listener de fechamento no elemento que fecha o scrim\n   * @private\n   */\n  _setCloseClick() {\n    this.closeElement.addEventListener('click', () => {\n      this.hideScrim()\n    })\n  }\n  /**\n   * Configura o comportamento scrim\n   * @public\n   */\n  setBehavior() {\n    this.trigger.addEventListener('click', (event) => {\n      if (event.target.getAttribute('data-scrim')) {\n        this.hideScrim()\n      }\n    })\n  }\n}\n"],"names":[],"sourceRoot":""}