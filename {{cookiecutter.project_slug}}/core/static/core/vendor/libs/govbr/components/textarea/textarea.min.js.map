{"version":3,"file":"components/textarea/textarea.min.js","mappings":"CAAA,SAAUA,EAAiCC,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,OAAQ,GAAIH,GACO,iBAAZC,QACdA,QAAc,KAAID,IAElBD,EAAW,KAAIC,GAChB,CATD,CASGK,MAAM,I,2BCRT,MAAMC,EAMJ,WAAAC,CAAYC,EAAMC,GAChBC,KAAKF,KAAOA,EACZE,KAAKD,UAAYA,EACjBC,KAAKC,eACLD,KAAKE,WACP,CAMA,YAAAD,GACED,KAAKG,MAAQH,KAAKD,UAAUK,cAAc,UAC1CJ,KAAKK,QAAUL,KAAKD,UAAUK,cAAc,YACK,OAA7CJ,KAAKD,UAAUK,cAAc,cAC/BJ,KAAKM,QAAUN,KAAKD,UACjBK,cAAc,YACdG,aAAa,cAGlBP,KAAKQ,WAAaR,KAAKD,UAAUK,cAAc,eAC/CJ,KAAKS,aAAeT,KAAKD,UAAUK,cAAc,WACnD,CAMA,SAAAF,GACEF,KAAKD,UAAUW,iBAAiB,SAAS,KACvCV,KAAKW,cAAa,IAGpBX,KAAKD,UAAUK,cAAc,YAAYM,iBAAiB,SAAS,KACjEE,QAAQC,IAAI,kBACZb,KAAKW,cAAa,GAEtB,CAEA,YAAAA,GACE,MAAMG,EAAiBd,KAAKD,UAAUK,cAAc,YAAYW,WAChE,GAAID,GAAkBd,KAAKM,UAAYN,KAAKQ,WAAY,CAClDR,KAAKG,QACPH,KAAKG,MAAMa,UAAY,IAGzB,MAAMC,EAAYjB,KAAKM,QAAUQ,EAC3BI,EAAiB,UAAUD,eAC3BE,EAAsB,6CAA6CF,gCAErEjB,KAAKS,eAEPT,KAAKS,aAAaO,UAAYG,EAElC,EAEKnB,KAAKQ,YAAcR,KAAKG,MACJ,IAAnBW,GAAiD,KAAzBd,KAAKG,MAAMa,YACrChB,KAAKG,MAAMa,UAAY,sDAAsDhB,KAAKM,qCAClFN,KAAKS,aAAaO,UAAY,IAK5BhB,KAAKQ,aACPR,KAAKQ,WAAWQ,UAAY,mBAAmBF,yCAGrD,EAGF,MAAe,I","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/textarea/textarea.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","/** Classe para instanciar um objeto BRTextArea*/\nclass BRTextArea {\n  /**\n   * Instancia do objeto\n   * @param {string} name - Nome do componente em minúsculo\n   * @param {object} component - Objeto referenciando a raiz do componente DOM\n   */\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this._setBehavior()\n    this._setKeyup()\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   */\n  _setBehavior() {\n    this.limit = this.component.querySelector('.limit')\n    this.current = this.component.querySelector('.current')\n    if (this.component.querySelector('textarea') !== null) {\n      this.maximum = this.component\n        .querySelector('textarea')\n        .getAttribute('maxlength')\n    }\n\n    this.characters = this.component.querySelector('.characters')\n    this.currentValue = this.component.querySelector('.current')\n  }\n\n  /**\n   * Define ações do teclado\n   * @private\n   */\n  _setKeyup() {\n    this.component.addEventListener('keyup', () => {\n      this.updateAssist()\n    })\n\n    this.component.querySelector('textarea').addEventListener('focus', () => {\n      console.log('testando focus')\n      this.updateAssist()\n    })\n  }\n\n  updateAssist() {\n    const characterCount = this.component.querySelector('textarea').textLength\n    if (characterCount <= this.maximum && !this.characters) {\n      if (this.limit) {\n        this.limit.innerHTML = ''\n      }\n\n      const limitemax = this.maximum - characterCount\n      const mensagemRestam = `Restam ${limitemax}caracteres `\n      const mensagemRestamInner = `<span aria-live=\"polite\">Restam  <strong >${limitemax}</strong > caracteres</span>`\n      // this.currentValue.setAttribute('aria-label', mensagemRestam)\n      if (this.currentValue) {\n        // debugger\n        this.currentValue.innerHTML = mensagemRestamInner\n      }\n    }\n    // Com limite de caracteres\n    if (!this.characters && this.limit) {\n      if (characterCount === 0 && this.limit.innerHTML === '') {\n        this.limit.innerHTML = `<span aria-live=\"polite\">Limite máximo de <strong >${this.maximum}</strong> caracteres</span>`\n        this.currentValue.innerHTML = ''\n      }\n    }\n    // Sem limite de caracteres\n    else {\n      if (this.characters) {\n        this.characters.innerHTML = `<span ><strong >${characterCount}</strong> caracteres digitados</span>`\n      }\n    }\n  }\n}\n\nexport default BRTextArea\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","BRTextArea","constructor","name","component","this","_setBehavior","_setKeyup","limit","querySelector","current","maximum","getAttribute","characters","currentValue","addEventListener","updateAssist","console","log","characterCount","textLength","innerHTML","limitemax","mensagemRestam","mensagemRestamInner"],"sourceRoot":""}