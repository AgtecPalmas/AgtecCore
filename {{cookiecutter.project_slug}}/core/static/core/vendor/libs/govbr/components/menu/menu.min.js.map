{"version":3,"file":"components/menu/menu.min.js","mappings":"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","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/menu/menu.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","/** Classe para instanciar um objeto BRMenu*/\nclass BRMenu {\n  /**\n   * Instancia do objeto\n   * @param {string} name - Nome do componente em minúsculo\n   * @param {object} component - Objeto referenciando a raiz do componente DOM\n   */\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this.id = this.component.id\n    this.breakpoints = this.component.dataset.breakpoints\n      ? this.component.dataset.breakpoints.split(' ')\n      : ['col-sm-4', 'col-lg-3']\n    this.pushShadow = 'shadow-lg-right'\n    this.trigger = document.querySelector(`[data-target=\"#${this.id}\"]`)\n    this.contextual = this.component.querySelector('[data-toggle=\"contextual\"]')\n    this.dismiss = this.component.querySelectorAll('[data-dismiss=\"menu\"]')\n    this.scrim = this.component.querySelector('.menu-scrim')\n    this.componentFolders = this.component.querySelectorAll('.menu-folder')\n    this.componentSiders = this.component.querySelectorAll('.side-menu')\n    this.componentItems = this.component.querySelectorAll('.menu-item')\n    this.elementOpenMenu = HTMLElement\n    this.inSubmenu = false\n    this.triggerParent = HTMLElement\n    this._setBehavior()\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   */\n  _setBehavior() {\n    this._toggleMenu()\n    this._setDropMenu()\n    this._setSideMenu()\n    this._setKeyboardBehaviors()\n    this._setBreakpoints()\n    this._setView()\n    this._addARIAAttributes()\n    window.addEventListener('resize', () => {\n      this._setView()\n    })\n  }\n\n  /**\n   * Define visual do componente\n   * @private\n   */\n  _setView() {\n    const template = document.querySelector('body')\n    const menuContextual = document.querySelector('.menu-trigger')\n    // const panel = document.querySelector('.menu-panel')\n    if (menuContextual && window.innerWidth < 992) {\n      template.classList.add('mb-5')\n    } else {\n      template.classList.remove('mb-5')\n    }\n  }\n\n  /**\n   * Define breakpoints do menu\n   * @private\n   */\n  _setBreakpoints() {\n    if (!this.component.classList.contains('push') && !this.contextual) {\n      this.component\n        .querySelector('.menu-panel')\n        .classList.add(...this.breakpoints)\n    }\n  }\n\n  /**\n   * Define ações do teclado\n   * @private\n   */\n  _setKeyboardBehaviors() {\n    // Fechar com tecla ESC\n    this.component.addEventListener('keydown', (event) => {\n      // Código da tecla\n\n      const keyCode = event.code\n      switch (keyCode) {\n        case 'Escape':\n          event.preventDefault()\n\n          if (this.trigger) {\n            this._closeMenu()\n          }\n\n          break\n        case 'ArrowDown':\n          event.preventDefault()\n          this._navigateToNextElment(event.target, 1)\n          break\n        case 'ArrowUp':\n          event.preventDefault()\n          this._navigateToNextElment(event.target, -1)\n          break\n        default:\n          break\n      }\n    })\n    // Fechar com Tab fora do menu\n    if (this.scrim) {\n      // this.scrim.addEventListener('keyup', () => {\n      //   return this._closeMenu()\n      // })\n    }\n  }\n\n  /**\n   * Navega para o próximo elemento na lista com base em um operador.\n   *\n   * @param {HTMLElement} element - O elemento de referência a partir do qual a navegação será realizada.\n   * @param {number} operator - Um operador numérico que indica a direção da navegação.\n   *                             Um valor positivo indica a navegação para baixo, enquanto um valor negativo\n   *                             indica a navegação para cima.\n   */\n  _navigateToNextElment(element, operator) {\n    // Obtém o contêiner pai com base na hierarquia\n    const parentFolder = element.parentNode.closest('.side-menu.active')\n      ? element.parentNode.closest('.side-menu.active')\n      : element.closest('.br-menu')\n    // Obtém todos os elementos irmãos relacionados ao elemento de referência dentro do contêiner pai\n    const elementSiblings =\n      parentFolder.classList.contains('br-menu') ||\n      parentFolder.classList.contains('menu-body')\n        ? parentFolder.querySelectorAll(\n            '.menu-body > .menu-item, .menu-body > .menu-folder > .menu-item,.menu-body > .menu-folder.active > .side-menu.active, .menu-body > .menu-folder.active > ul > li > .menu-item'\n          )\n        : parentFolder.querySelectorAll(\n            '.side-menu.active > .menu-item,.side-menu.active > ul > li > .menu-item'\n          )\n    // Determina a posição do elemento de referência na lista de elementos irmãos\n    const posicao = Array.from(elementSiblings).findIndex((el) => {\n      return el === element\n    })\n\n    // Calcula a nova posição na lista com base no operador\n    const soma = posicao + operator\n\n    // Foca no próximo elemento na lista, ajustando para o início ou o final da lista se necessário\n    if (soma >= 0 && soma < elementSiblings.length) {\n      const nextElement = elementSiblings[soma]\n\n      if (\n        nextElement.getAttribute('role') === 'group' ||\n        nextElement.getAttribute('role') === 'tree'\n      ) {\n        const nextSibling = elementSiblings[soma + operator]\n        nextSibling.focus()\n      } else {\n        nextElement.focus()\n      }\n    } else {\n      // Se a nova posição estiver fora dos limites, foca no primeiro ou no último elemento da lista, dependendo do operador\n      const lastIndex = elementSiblings.length - 1\n      const targetElement = operator === 1 ? 0 : lastIndex\n      const target = elementSiblings[targetElement]\n      target.focus()\n    }\n  }\n\n  /**\n   * Define comportamentos de abrir/fechar menu\n   * @private\n   */\n  _toggleMenu() {\n    const trigger = this.contextual ? this.contextual : this.trigger\n    // Clicar no trigger\n    if (trigger) {\n      trigger.addEventListener('keydown', (event) => {\n        if (event.code === 'Enter' || event.code === 'Space') {\n          event.preventDefault() // Impede o comportamento padrão do botão Enter ou Space\n          // Fechar Menu caso esteja aberto\n          if (this.component.classList.contains('active')) {\n            this._closeMenu()\n          } else {\n            // Abre Menu\n            this._openMenu()\n\n            this._focusOnFirstVisibleItem()\n          }\n        }\n      })\n\n      trigger.addEventListener('click', () => {\n        // Fechar Menu caso esteja aberto\n        if (this.component.classList.contains('active')) {\n          this._closeMenu()\n        } else {\n          this._openMenu()\n          this._focusOnFirstVisibleItem()\n        }\n      })\n    }\n    // Clicar no dismiss\n    for (const close of this.dismiss) {\n      close.addEventListener('click', () => {\n        return this._closeMenu()\n      })\n    }\n  }\n\n  /**\n   *  Focar no primeiro item de nível 1 visível\n   * @private\n   */\n  _focusOnFirstVisibleItem() {\n    const activeMenu = this.component.querySelector(\n      '.menu-body .menu-item:not([hidden]):not(.inactive)'\n    )\n    if (activeMenu) {\n      activeMenu.focus()\n      activeMenu.scrollIntoView({ block: 'nearest' }) // Foca e traz para a visualização se necessário\n      return\n    }\n\n    const firstVisibleItem = this.component.querySelector(\n      '.menu-body > .menu-item:not([hidden]):not(.inactive)'\n    )\n\n    if (firstVisibleItem) {\n      firstVisibleItem.focus()\n      firstVisibleItem.scrollIntoView({ block: 'nearest' }) // Foca e traz para a visualização se necessário\n    }\n  }\n\n  /**\n   * Define visual do menu aberto\n   * @private\n   */\n  _openMenu() {\n    this.elementOpenMenu = document.activeElement\n    this.component.classList.add('active')\n    this.component.setAttribute('aria-expanded', 'true')\n    this.elementOpenMenu.setAttribute('aria-expanded', 'true')\n\n    if (this.component.classList.contains('push')) {\n      this.component.classList.add(...this.breakpoints, 'px-0')\n    }\n  }\n\n  /**\n   * Define visual do menu fechado\n   * @private\n   */\n  _closeMenu() {\n    this.component.classList.remove('active')\n    if (this.component.classList.contains('push')) {\n      this.component.classList.remove(...this.breakpoints, 'px-0')\n    }\n    if (this.elementOpenMenu) {\n      this.elementOpenMenu.setAttribute('aria-expanded', 'false')\n    }\n    this.elementOpenMenu.focus()\n    // }\n  }\n\n  /**\n   * Configura Drop Menu para filho imediato de \".menu-folder\"\n   * @private\n   */\n  _setDropMenu() {\n    for (const item of this.component.querySelectorAll(\n      '.menu-folder > a.menu-item'\n    )) {\n      // Inclui ícone de Drop Menu\n      this._createIcon(item, 'fa-chevron-down')\n      // Configura como Drop Menu\n      item.parentNode.classList.add('drop-menu')\n      //Configura aria indicando que submenu está fechado\n      item.setAttribute('aria-expanded', 'false')\n      // Inicializa Drop Menu\n      this._handleMenuInteraction(item)\n    }\n  }\n\n  /**\n   * Foca no próximo elemento\n   * @private\n   */\n  _focusNextElement() {\n    //lista de elementos que desejamos focar\n    const focussableElements =\n      'a:not([disabled]), button:not([disabled]), input[type=text]:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])'\n    if (document.activeElement) {\n      const focussable = Array.prototype.filter.call(\n        this.component.querySelectorAll(focussableElements),\n        (element) => {\n          // testa a visibilidade e inclui o elemento ativo\n          return (\n            element.offsetWidth > 0 ||\n            element.offsetHeight > 0 ||\n            element === document.activeElement\n          )\n        }\n      )\n      const index = focussable.indexOf(document.activeElement)\n      const nextElement = focussable[index + 1] || focussable[0]\n      nextElement.focus()\n    }\n  }\n\n  /**\n   * Configura Side Menu para quem não for filho imediato de \".menu-folder\"\n   * @private\n   */\n  _setSideMenu() {\n    for (const ul of this.component.querySelectorAll('a.menu-item + ul')) {\n      if (!ul.parentNode.classList.contains('menu-folder')) {\n        // Inclui ícone de Side Menu\n        this._createIcon(ul.previousElementSibling, 'fa-angle-right')\n        // Configura como Side Menu\n        ul.parentNode.classList.add('side-menu')\n        ul.parentNode.setAttribute('role', 'none')\n        // Inicializa Side Menu\n        this._handleSideMenuInteraction(ul.previousElementSibling)\n      }\n    }\n  }\n\n  /**\n   * Gerencia eventos de cliques e interações por teclado no menu - tecla espaço\n   * @private\n   * @param {object} element - referência ao Objeto que fará a ação\n   */\n  _handleMenuInteraction(element) {\n    if (!element.hasAttribute('data-click-listener')) {\n      element.addEventListener('click', () => {\n        this._toggleDropMenu(element)\n      })\n\n      element.addEventListener('keydown', (event) => {\n        const menuFolder = element.closest('.menu-folder')\n        const menuItem = menuFolder.querySelector('a.menu-item')\n\n        if (menuFolder) {\n          if (event.key === ' ' || event.key === 'Spacebar') {\n            if (menuItem && menuItem.classList.contains('focus-visible')) {\n              event.preventDefault()\n              this._toggleDropMenu(element)\n            }\n          }\n          if (event.key === '2') {\n            // event.preventDefault()\n\n            this._toggleDropMenu(element)\n          }\n        }\n      })\n\n      element.setAttribute('data-click-listener', 'true')\n    }\n  }\n\n  /**\n   * Muda estado do Drop Menu - aberto/fechado\n   * @private\n   * @param {object} element - referência ao Objeto que fará a ação\n   */\n  _toggleDropMenu(element) {\n    if (element.parentNode.classList.contains('active')) {\n      // this.inSubmenu = false\n      this._closeMenuElement(element)\n    } else {\n      element.parentNode.classList.add('active')\n      element.setAttribute('aria-expanded', 'true')\n\n      this.inSubmenu = true\n      element.parentElement\n        .querySelectorAll('ul li ul a')\n        .forEach((menuItem) => {\n          this.triggerParent = menuItem.parentElement\n          menuItem.addEventListener('keydown', (event) => {\n            const { parentElement } = menuItem.parentElement\n            const keyCode = event.code\n\n            switch (keyCode) {\n              case 'Escape':\n                event.preventDefault()\n                this._backMenu(parentElement)\n                break\n              case 'Backspace':\n                event.preventDefault()\n                this._backMenu(parentElement)\n                break\n              case 'ArrowLeft':\n                event.preventDefault()\n                this._backMenu(parentElement)\n                break\n              default:\n                break\n            }\n          })\n        })\n    }\n  }\n\n  _backMenu(parentElement) {\n    //\n\n    parentElement.parentElement.querySelector('[data-click-listener]').click()\n  }\n\n  _closeMenuElement(element) {\n    element.parentNode.classList.remove('active')\n    element.setAttribute('aria-expanded', 'false')\n  }\n\n  /**\n   * Gerencia eventos de cliques e interações por teclado no Side Menu - tecla espaço\n   * @private\n   * @param {object} element - referência ao Objeto que fará a ação\n   */\n  _handleSideMenuInteraction(element) {\n    // Verifica se o elemento já possui click listener através de um atributo especial\n    if (!element.hasAttribute('data-click-listener')) {\n      element.addEventListener('click', () => {\n        this.inSubmenu = false\n        this._toggleSideMenu(element)\n      })\n\n      element.addEventListener('keydown', (event) => {\n        const sideMenu = element.closest('.side-menu')\n        const menuItem = sideMenu.querySelector('a.menu-item')\n\n        if (sideMenu) {\n          if (event.key === ' ' || event.key === 'Spacebar') {\n            if (menuItem && menuItem.classList.contains('focus-visible')) {\n              event.preventDefault()\n              this._toggleSideMenu(element)\n            }\n          }\n        }\n      })\n\n      element.setAttribute('data-click-listener', 'true')\n    }\n  }\n\n  /**\n   * Muda estado do Side Menu - aberto/fechado\n   * @private\n   * @param {object} element - referência ao Objeto que fará a ação\n   */\n  _toggleSideMenu(element) {\n    this._hideItems(element)\n\n    // Mostra itens do Side Menu ativo\n    element.setAttribute('aria-expanded', 'true')\n    this._showItems(element.parentNode)\n\n    // Fecha Side Menu caso esteja aberto\n    if (element.parentNode.classList.contains('active')) {\n      this._closeSideMenu(element)\n      element.focus()\n      return\n    }\n\n    // Abre Side Menu\n    element.parentNode.classList.add('active')\n\n    // Foca no primeiro item do Side Menu\n    const submenu = element.nextElementSibling\n    if (submenu) {\n      const firstMenuItem = submenu.querySelector('.menu-item')\n      if (firstMenuItem) {\n        firstMenuItem.focus()\n      }\n    }\n  }\n\n  /**\n   * Fecha Side Menu\n   * @private\n   * @param {object} element - referência ao Objeto que fará a ação\n   */\n  _closeSideMenu(element) {\n    element.parentNode.classList.remove('active')\n    element.setAttribute('aria-expanded', 'false')\n    // Verifica se existe Side Menu anterior, caso contrário mostra todos os itens de volta\n    const parentFolder = element.parentNode.closest('.side-menu.active')\n      ? element.parentNode.closest('.side-menu.active')\n      : element.closest('.menu-body')\n    this._showItems(parentFolder)\n  }\n\n  /**\n   * Esconde os elementos proximos a referencia\n   * @private\n   * @param {object} element - referencia ao Objeto que fará a ação\n   */\n  _hideItems(element) {\n    for (const item of element\n      .closest('.menu-body')\n      .querySelectorAll('.menu-item')) {\n      item.setAttribute('hidden', '')\n    }\n  }\n\n  /**\n   * Mostra os elementos proximos a referencia\n   * @private\n   * @param {object} element - referência ao Objeto que fará a ação\n   */\n  _showItems(element) {\n    for (const item of element.querySelectorAll('.menu-item')) {\n      item.removeAttribute('hidden')\n    }\n  }\n\n  /**\n   * Cria icone filho a referencia\n   * @private\n   * @param {object} element - referência ao Objeto pai\n   * @param {string} icon - nome da classe font awesome do ícone\n   */\n  _createIcon(element, icon) {\n    // Verifica se já existe container para o ícone\n    if (!element.querySelectorAll('span.support').length) {\n      const menuIconContainer = document.createElement('span')\n      menuIconContainer.classList.add('support')\n\n      const menuIcon = document.createElement('i')\n      menuIcon.classList.add('fas')\n      menuIcon.classList.add(icon)\n      menuIcon.setAttribute('aria-hidden', 'true')\n\n      menuIconContainer.appendChild(menuIcon)\n      element.appendChild(menuIconContainer)\n    }\n  }\n\n  /**\n   * Adiciona atributos role=menu e role=menuitem com base na hierarquia dos elementos\n   * @private\n   */\n  _addARIAAttributes() {\n    // Adiciona atributo role=\"menubar\" à classe .menu-body\n    const menuBody = this.component.querySelector('.menu-body')\n    // menuBody.setAttribute('role', 'menubar')\n    menuBody.setAttribute('role', 'tree')\n    if (this.contextual) {\n      menuBody.setAttribute('role', 'menubar')\n    }\n\n    // Adiciona atributo role=\"group\" nos elementos .menu-item que são filhos de .menu-folder e não são drop-down\n    const nonDropdownItems = this.component.querySelectorAll(\n      '.menu-folder:not(.drop-menu) > .menu-item'\n    )\n    nonDropdownItems.forEach((item) => {\n      item.setAttribute('role', 'tree')\n      if (this.contextual) {\n        item.setAttribute('role', 'menubar')\n      }\n    })\n\n    // Adiciona atributo role=\"menuitem\" somente aos elementos <a> com a classe .menu-item que não têm .menu-folder como pai\n    const menuItems = this.component.querySelectorAll(\n      '.menu-folder.drop-menu > a.menu-item, li > a.menu-item'\n    )\n    menuItems.forEach((item) => {\n      item.setAttribute('role', 'treeitem')\n      if (this.contextual) {\n        item.setAttribute('role', 'menuitem')\n      }\n    })\n\n    // Adiciona atributo role=\"menu\" e aria-label nos elementos <ul> que são filhos de .side-menu\n    const sideMenuLists = this.component.querySelectorAll('.side-menu > ul')\n    sideMenuLists.forEach((list) => {\n      const menuItem = list.parentNode.querySelector('.menu-item .content')\n      const menuItemText = menuItem.textContent.trim()\n\n      list.setAttribute('role', 'group')\n      list.setAttribute('aria-label', menuItemText)\n    })\n\n    // Adiciona atributo role=\"menu\" e aria-label nos elementos <ul> que são filhos de .menu-folder\n    const menuFolderLists = this.component.querySelectorAll('.menu-folder > ul')\n    menuFolderLists.forEach((list) => {\n      const menuItem = list.parentNode.querySelector('.menu-item .content')\n      const menuItemText = menuItem.textContent.trim()\n      list.setAttribute('role', 'tree')\n      if (this.contextual) {\n        list.setAttribute('role', 'menubar')\n      }\n      list.setAttribute('aria-label', menuItemText)\n    })\n\n    const sideMenuItems = this.component.querySelectorAll(\n      'li.side-menu > .menu-item'\n    )\n    for (const submenu of sideMenuItems) {\n      submenu.setAttribute('aria-haspopup', 'true')\n      submenu.setAttribute('aria-expanded', 'false')\n    }\n\n    const folderMenuItems = this.component.querySelectorAll(\n      '.menu-folder.drop-menu > .menu-item'\n    )\n    for (const submenu of folderMenuItems) {\n      submenu.setAttribute('aria-haspopup', 'true')\n      submenu.setAttribute('aria-expanded', 'false')\n    }\n  }\n}\n\nexport default BRMenu\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","BRMenu","constructor","name","component","this","id","breakpoints","dataset","split","pushShadow","trigger","document","querySelector","contextual","dismiss","querySelectorAll","scrim","componentFolders","componentSiders","componentItems","elementOpenMenu","HTMLElement","inSubmenu","triggerParent","_setBehavior","_toggleMenu","_setDropMenu","_setSideMenu","_setKeyboardBehaviors","_setBreakpoints","_setView","_addARIAAttributes","window","addEventListener","template","menuContextual","innerWidth","classList","add","remove","contains","event","keyCode","code","preventDefault","_closeMenu","_navigateToNextElment","target","element","operator","parentFolder","parentNode","closest","elementSiblings","posicao","Array","soma","from","findIndex","el","length","nextElement","getAttribute","nextSibling","focus","lastIndex","targetElement","_openMenu","_focusOnFirstVisibleItem","close","activeMenu","scrollIntoView","block","firstVisibleItem","activeElement","setAttribute","item","_createIcon","_handleMenuInteraction","_focusNextElement","focussableElements","focussable","prototype","filter","call","offsetWidth","offsetHeight","index","indexOf","ul","previousElementSibling","_handleSideMenuInteraction","hasAttribute","_toggleDropMenu","menuFolder","menuItem","key","_closeMenuElement","parentElement","forEach","_backMenu","click","_toggleSideMenu","sideMenu","_hideItems","_showItems","_closeSideMenu","submenu","nextElementSibling","firstMenuItem","removeAttribute","icon","menuIconContainer","createElement","menuIcon","appendChild","menuBody","nonDropdownItems","menuItems","sideMenuLists","list","menuItemText","textContent","trim","menuFolderLists","sideMenuItems","folderMenuItems"],"sourceRoot":""}