{"version":3,"file":"components/tag/tag.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;ACVA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,sCAAsC;AACpD;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sEAAe,qDAAK;;;;;;AC1IpB","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/tag/tag.js","webpack://core/./src/components/tag/_tag.scss?c03f"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","/** Classe para instanciar um objeto BRTag*/\nclass BRTag {\n  /**\n   * Instancia do objeto\n   * @param {string} name - Nome do componente em minúsculo\n   * @param {object} component - Objeto referenciando a raiz do componente DOM\n   */\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this._setBehavior()\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   */\n  _setBehavior() {\n    if (this.component.classList.contains('interaction-select')) {\n      // Inicializa selecionado\n      if (this.component.querySelector('input').getAttribute('checked')) {\n        this.component.classList.add('selected')\n      }\n      this._setSelection()\n    }\n    this._closeTag()\n    this._dismissTag()\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   */\n  _setSelection() {\n    const label = this.component.querySelector('label')\n    const input = this.component.querySelector('input')\n    // const tagRadio = input.getAttribute('type') === 'radio' ? true : false\n\n    label.addEventListener('click', (event) => {\n      this._toggleSelection(input, event)\n    })\n    input.addEventListener('keydown', (event) => {\n      if (event.code === 'Space' || event.code === 'Enter') {\n        this._toggleSelection(input, event)\n      }\n    })\n  }\n\n  /**\n   * Muda estado do radio\n   * @private\n   * @param {object} input - referencia DOM ao input\n   */\n  _toggleRadio(input) {\n    if (this.component.querySelector('[type=\"radio\"')) {\n      const nameTag = input.getAttribute('name')\n      for (const tagRadio of window.document.querySelectorAll(\n        `[name=${nameTag}]`\n      )) {\n        this._removeCheck(tagRadio)\n      }\n    }\n  }\n\n  /**\n   * Muda estado do input\n   * @private\n   * @param {object} input - referencia DOM ao input\n   * @param {event} event - ação que disparou o evento\n   */\n  _toggleSelection(input, event) {\n    event.preventDefault()\n    this._toggleRadio(input)\n    if (input.getAttribute('checked')) {\n      this._removeCheck(input)\n      return\n    }\n\n    this._setCheck(input)\n  }\n\n  /**\n   * Define estado do input para selecionado\n   * @private\n   * @param {object} input - referencia DOM ao input\n   */\n  _setCheck(input) {\n    input.setAttribute('checked', 'checked')\n    input.parentElement.classList.add('selected')\n  }\n\n  /**\n   * Define estado do input para desselecionado\n   * @private\n   * @param {object} input - referencia DOM ao input\n   */\n  _removeCheck(input) {\n    input.removeAttribute('checked')\n    input.parentElement.classList.remove('selected')\n  }\n\n  /**\n   * Define comportamento do botão de fechar usando classe (compatibilidade)\n   * @private\n   */\n  _closeTag() {\n    const closeBtn = this.component.querySelector('.br-button.close')\n\n    if (closeBtn) {\n      const brTag = closeBtn.closest('.br-tag')\n\n      brTag.addEventListener('click', () => {\n        closeBtn.closest('.br-tag').remove()\n      })\n    }\n  }\n\n  /**\n   * Define comportamento do botão de fechar usando data-dismiss\n   * @private\n   */\n  _dismissTag() {\n    this.component.querySelectorAll('[data-dismiss]').forEach((closeBtn) => {\n      closeBtn.addEventListener('click', () => {\n        const target = document.querySelector(\n          `#${closeBtn.getAttribute('data-dismiss')}`\n        )\n        if (target) target.remove()\n      })\n    })\n  }\n}\n\nconst tagList = []\nfor (const brTag of window.document.querySelectorAll('.br-tag')) {\n  tagList.push(new BRTag('br-tab', brTag))\n}\n\nexport default BRTag\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}