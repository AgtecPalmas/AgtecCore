{"version":3,"file":"components/card/card.min.js","mappings":"CAAA,SAAUA,EAAiCC,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,OAAQ,GAAIH,GACO,iBAAZC,QACdA,QAAc,KAAID,IAElBD,EAAW,KAAIC,GAChB,CATD,CASGK,MAAM,I,2BCNT,MAAMC,EAOJC,YAAYC,EAAMC,EAAWC,GAC3BC,KAAKH,KAAOA,EACZG,KAAKF,UAAYA,EACjBE,KAAKF,UAAUG,aAAa,KAAM,OAAOF,KACzCC,KAAKE,cACP,CAMAA,eACEF,KAAKG,mBAELH,KAAKI,mBACLJ,KAAKK,sBACLL,KAAKM,mBACP,CAMAA,oBACEN,KAAKF,UACFS,iBAAiB,4BACjBC,SAASC,IACR,MAAMC,EAAS,UAMTC,EAAW,cAAIC,SANN,CACbC,WAAY,gBACZC,WAAY,kBACZL,UACAM,UAAU,IAGHC,aAAY,GAE3B,CAMAX,sBACE,GAAIL,KAAKF,UAAUmB,UAAUC,SAAS,YAAa,CACjDlB,KAAKF,UAAUG,aAAa,cAAe,QAC3C,MAAMkB,EAAUnB,KAAKF,UAAUS,iBAAiB,UAC1Ca,EAASpB,KAAKF,UAAUS,iBAAiB,SACzCc,EAAUrB,KAAKF,UAAUS,iBAAiB,UAC1Ce,EAAYtB,KAAKF,UAAUS,iBAAiB,YAClD,IAAK,MAAMgB,KAAUJ,EACnBI,EAAOtB,aAAa,WAAY,YAElC,IAAK,MAAMuB,KAASJ,EAClBI,EAAMvB,aAAa,WAAY,YAEjC,IAAK,MAAMwB,KAAUJ,EACnBI,EAAOxB,aAAa,WAAY,YAElC,IAAK,MAAMyB,KAAYJ,EACrBI,EAASzB,aAAa,WAAY,WAEtC,CACF,CAMAE,mBACE,IAAK,MAAMwB,KAAQ3B,KAAKF,UAAUS,iBAAiB,eACjDoB,EAAKC,iBAAiB,SAAS,KACkB,QAA3C5B,KAAKF,UAAU+B,aAAa,WAC9B7B,KAAKF,UAAUG,aAAa,UAAW,MAEvCD,KAAKF,UAAUG,aAAa,UAAW,MACzC,GAGN,CAMAG,mBACE,IAAK,MAAM0B,KAAO9B,KAAKF,UAAUS,iBAAiB,OAChDuB,EAAI7B,aAAa,YAAa,SAEhC,IAAK,MAAM8B,KAAQ/B,KAAKF,UAAUS,iBAAiB,KACjDwB,EAAK9B,aAAa,YAAa,SAEjCD,KAAKF,UAAU8B,iBAAiB,aAAcI,IAC5CA,EAAMC,kBACND,EAAME,aAAaC,QACjB,aACAnC,KAAKF,UAAU+B,aAAa,OAE9BG,EAAMI,WAAa,SAEvB,EAGF,MAAe,I","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/card/card.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","import Collapse from '../../partial/js/behavior/collapse'\n\n/** Classe para instanciar um objeto BRCard */\nclass BRCard {\n  /**\n   * Instancia do componente\n   * @property {string} name - Nome do componente em minÃºsculo\n   * @property {object} component - Objeto referenciando a raiz do componente DOM\n   * @property {string} id - nome da id do ocmponente\n   */\n  constructor(name, component, id) {\n    this.name = name\n    this.component = component\n    this.component.setAttribute('id', `card${id}`)\n    this._setBehavior()\n  }\n\n  /**\n   * Define o comportamento do componente\n   * @private\n   */\n  _setBehavior() {\n    this._setFlipBehavior()\n    // this._setExpandBehavior()\n    this._setDragBehavior()\n    this._setDisableBehavior()\n    this._collpaseBehavior()\n  }\n\n  /**\n   * Define o comportamento de comprimir (collapse)\n   * @private\n   */\n  _collpaseBehavior() {\n    this.component\n      .querySelectorAll('[data-toggle=\"collapse\"]')\n      .forEach((trigger) => {\n        const config = {\n          iconToHide: 'fa-chevron-up',\n          iconToShow: 'fa-chevron-down',\n          trigger,\n          useIcons: true,\n        }\n        const collapse = new Collapse(config)\n        collapse.setBehavior()\n      })\n  }\n\n  /**\n   * Desabilita o componente\n   * @private\n   */\n  _setDisableBehavior() {\n    if (this.component.classList.contains('disabled')) {\n      this.component.setAttribute('aria-hidden', 'true')\n      const buttons = this.component.querySelectorAll('button')\n      const inputs = this.component.querySelectorAll('input')\n      const selects = this.component.querySelectorAll('select')\n      const textareas = this.component.querySelectorAll('textarea')\n      for (const button of buttons) {\n        button.setAttribute('disabled', 'disabled')\n      }\n      for (const input of inputs) {\n        input.setAttribute('disabled', 'disabled')\n      }\n      for (const select of selects) {\n        select.setAttribute('disabled', 'disabled')\n      }\n      for (const textarea of textareas) {\n        textarea.setAttribute('disabled', 'disabled')\n      }\n    }\n  }\n\n  /**\n   * Define o comportamento de girar (flip)\n   * @private\n   */\n  _setFlipBehavior() {\n    for (const flip of this.component.querySelectorAll('button.flip')) {\n      flip.addEventListener('click', () => {\n        if (this.component.getAttribute('flipped') === 'off') {\n          this.component.setAttribute('flipped', 'on')\n        } else {\n          this.component.setAttribute('flipped', 'off')\n        }\n      })\n    }\n  }\n\n  /**\n   * Define o comportamento de arrastar (drag)\n   * @private\n   */\n  _setDragBehavior() {\n    for (const img of this.component.querySelectorAll('img')) {\n      img.setAttribute('draggable', 'false')\n    }\n    for (const link of this.component.querySelectorAll('a')) {\n      link.setAttribute('draggable', 'false')\n    }\n    this.component.addEventListener('dragstart', (event) => {\n      event.stopPropagation()\n      event.dataTransfer.setData(\n        'text/plain',\n        this.component.getAttribute('id')\n      )\n      event.dropEffect = 'move'\n    })\n  }\n}\n\nexport default BRCard\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","BRCard","constructor","name","component","id","this","setAttribute","_setBehavior","_setFlipBehavior","_setDragBehavior","_setDisableBehavior","_collpaseBehavior","querySelectorAll","forEach","trigger","config","collapse","Collapse","iconToHide","iconToShow","useIcons","setBehavior","classList","contains","buttons","inputs","selects","textareas","button","input","select","textarea","flip","addEventListener","getAttribute","img","link","event","stopPropagation","dataTransfer","setData","dropEffect"],"sourceRoot":""}