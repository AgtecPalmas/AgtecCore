{"version":3,"file":"components/table/table.min.js","mappings":"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","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/partial/js/behavior/collapse.js","webpack://core/./src/partial/js/behavior/dropdown.js","webpack://core/webpack/bootstrap","webpack://core/webpack/runtime/define property getters","webpack://core/webpack/runtime/hasOwnProperty shorthand","webpack://core/./src/components/table/table.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","/** Classe para o comportamento Collapse */\nexport default class Collapse {\n  /**\n   * Instancia um comportamento collapse\n   * @param {object} - Objeto de configuração inicial para destructuring\n   * @property {object} trigger - Elemento DOM que representa o acionador do comportmento collapse\n   * @property {string} iconToShow - Classe que representa o ícone para mostrar o conteúdo (padrão: fa-chevron-down)\n   * @property {string} iconToHide - Classe que representa o ícone para esconder o conteúdo (padrão: fa-chevron-up)\n   * @property {boolean} useIcons - true: com ícone | false: sem ícone (padrão: true)\n   */\n  constructor({\n    trigger,\n    iconToShow = 'fa-chevron-down',\n    iconToHide = 'fa-chevron-up',\n    useIcons = true,\n  }) {\n    this.trigger = trigger\n    this.useIcons = useIcons\n    this.breakpoint = trigger.getAttribute('data-breakpoint')\n    this.setIconToShow(iconToShow)\n    this.setIconToHide(iconToHide)\n    this._setTarget()\n    this._setUp()\n  }\n\n  /**\n   * Determina qual elemento DOM é o alvo do comportamento collapse\n   * @private\n   */\n  _setTarget() {\n    this.target = document.querySelector(\n      `#${this.trigger.getAttribute('data-target')}`\n    )\n  }\n\n  // TODO: Melhorar a solução\n  _checkBreakpoint() {\n    if (this.breakpoint) {\n      if (window.matchMedia('(min-width: 977px)').matches) {\n        this.target.removeAttribute('hidden')\n      }\n    }\n  }\n\n  /**\n   * Trata a configuração inicial do comportamento collapse\n   * @private\n   */\n  _setUp() {\n    this._setVisibilityStatus()\n    if (this.useIcons) {\n      this._toggleIcon()\n    }\n    this.trigger.setAttribute(\n      'aria-controls',\n      `${this.trigger.getAttribute('data-target')}`\n    )\n    this._checkBreakpoint()\n    this.trigger.setAttribute('tabindex', '0')\n  }\n\n  /**\n   * Configura o estado de visualização do comportamento collapse\n   * @private\n   */\n  _setVisibilityStatus() {\n    this._setTriggerVisibilityStatus()\n    this._setTargetVisibilityStatus()\n  }\n\n  /**\n   * Trata o estado de visualização do acionador\n   * @private\n   */\n  _setTriggerVisibilityStatus() {\n    if (this.target) {\n      if (this.target.hasAttribute('hidden')) {\n        this.trigger.setAttribute('data-visible', false)\n        this.trigger.setAttribute('aria-expanded', false)\n      } else {\n        this.trigger.setAttribute('data-visible', true)\n        this.trigger.setAttribute('aria-expanded', true)\n      }\n    }\n  }\n\n  /**\n   * Handler para o evento de tecla pressionada (keydown) no acionador\n   * @private\n   */\n  _handleTriggerKeyPress() {\n    this._handleTriggerClickBehavior()\n  }\n\n  /**\n   * Configura o estado de visualização do comportamento collapse\n   * @private\n   */\n  _setVisibilityStatus() {\n    this._setTriggerVisibilityStatus()\n    this._setTargetVisibilityStatus()\n  }\n\n  /**\n   * Trata o estado de visualização do alvo\n   * @private\n   */\n  _setTargetVisibilityStatus() {\n    if (this.target) {\n      if (this.target.hasAttribute('hidden')) {\n        this.target.setAttribute('aria-hidden', true)\n      } else {\n        this.target.setAttribute('aria-hidden', false)\n        this._focusOnFirstItem(this.target)\n      }\n    }\n  }\n\n  /**\n   * Handler para o evento de click no acionador do comportamento collapse\n   * Lança um evento 'change' a cada troca\n   * @private\n   */\n  _handleTriggerClickBehavior() {\n    if (this.breakpoint) {\n      if (window.matchMedia('(max-width: 977px)').matches) {\n        this._toggleVisibility()\n        if (this.useIcons) {\n          this._toggleIcon()\n        }\n        this.trigger.dispatchEvent(new Event('change'))\n      }\n    } else {\n      this._toggleVisibility()\n      if (this.useIcons) {\n        this._toggleIcon()\n      }\n      this.trigger.dispatchEvent(new Event('change'))\n    }\n  }\n\n  /**\n   * Alterna o estado de visualização do comportamento collapse\n   * @private\n   */\n  _toggleVisibility() {\n    if (this.target) {\n      this.target.hasAttribute('hidden')\n        ? this._showTarget()\n        : this._hideTarget()\n    }\n  }\n\n  /**\n   * Exibe o target\n   * @private\n   */\n  _showTarget() {\n    this.target.removeAttribute('hidden')\n    this._setVisibilityStatus()\n    this._focusOnFirstItem(this.target)\n  }\n\n  /**\n   * Oculta o target\n   * @private\n   */\n  _hideTarget() {\n    this.target.setAttribute('hidden', '')\n    this._setVisibilityStatus()\n  }\n\n  /**\n   * focar no primeiro elemento ao expandir\n   * @private\n   */\n  _focusOnFirstItem(target) {\n    const focusableElements = target.querySelectorAll(\n      'a:not([disabled]), button:not([disabled]), input[type=text]:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])'\n    )\n\n    const firstItem = Array.from(focusableElements).find((element) => {\n      return !element.hasAttribute('hidden')\n    })\n\n    if (firstItem) {\n      firstItem.scrollIntoView({ block: 'nearest' }) // Foca e traz para a visualização se necessário\n    }\n  }\n\n  /**\n   * Troca o icone do acionador após uma mudança no estado de visualização do alvo\n   * Para o estado 'hidden' usa o iconToShow e para o estado 'shown' usa o iconToHide\n   * @public\n   */\n  _toggleIcon() {\n    this.trigger.querySelectorAll('i.fas').forEach((icon) => {\n      if (this.target) {\n        icon.classList.remove(\n          this.target.hasAttribute('hidden') ? this.iconToHide : this.iconToShow\n        )\n        icon.classList.add(\n          this.target.hasAttribute('hidden') ? this.iconToShow : this.iconToHide\n        )\n      }\n    })\n  }\n\n  /**\n   * Configura o comportamento collapse\n   * @public\n   */\n  setBehavior() {\n    this.trigger.addEventListener('click', (event) => {\n      if (event.type === 'click') {\n        this._handleTriggerClickBehavior()\n      }\n    })\n    this.trigger.addEventListener('keydown', (event) => {\n      if (event.key === 'Enter' || event.key === ' ') {\n        event.preventDefault()\n        this._handleTriggerKeyPress()\n      }\n    })\n\n    this.target.addEventListener('keydown', (event) => {\n      if (event.key === 'Escape' && !this.target.hasAttribute('hidden')) {\n        event.preventDefault()\n        this._hideTarget()\n        this.trigger.focus()\n      }\n    })\n  }\n\n  /**\n   * Determina a classe do icone para mostrar o conteúdo\n   * @param {string} iconToShow - Classe que representa o ícone para mostrar o conteúdo\n   * @public\n   */\n  setIconToShow(iconToShow) {\n    this.iconToShow = iconToShow\n  }\n\n  /**\n   * Determina a classe do ícone para esconder o conteúdo\n   * @param {string} iconToHide - Classe que representa o ícone para esconder o conteúdo\n   * @public\n   */\n  setIconToHide(iconToHide) {\n    this.iconToHide = iconToHide\n  }\n}\n","import Collapse from './collapse'\n\n/**\n * Classe para o comportamento Dropdown.\n * O Comportamento Dropdown é um caso especial do comportamentos Collapse\n * em que o alvo aparece flutuando na tela.\n * Nesse caso o alvo precisa filho de um elemento pai\n */\nexport default class Dropdown extends Collapse {\n  /**\n   * Instancia um comportamento accordion\n   * @param {object} - Objeto de configuração inicial para destructuring\n   * @property {object} trigger - Elemento DOM que representa o acionador do comportmento accordion\n   * @property {string} iconToShow - Classe que representa o ícone para mostrar o conteúdo (padrão: fa-chevron-down)\n   * @property {string} iconToHide - Classe que representa o ícone para esconder o conteúdo (padrão: fa-chevron-up)\n   * @property {boolean} useIcons - true: com ícone | false: sem ícone (padrão: true)\n   */\n  constructor({\n    trigger,\n    iconToShow = 'fa-chevron-down',\n    iconToHide = 'fa-chevron-up',\n    useIcons = true,\n  }) {\n    super({ iconToHide, iconToShow, trigger, useIcons })\n  }\n\n  /**\n   * Trata a configuração inicial do comportamento dropdown\n   * @override\n   * @private\n   */\n  _setUp() {\n    super._setUp()\n    this._hideDropdown()\n    this._initializeDropdownItems();\n  }\n\n  /**\n   * Oculta o dropdown ao clicar fora do acionador e do alvo\n   * @private\n   */\n  _hideDropdown() {\n    document.addEventListener('mousedown', (event) => {\n      if (\n        !this.trigger.contains(event.target) &&\n        !this.target.hasAttribute('hidden') &&\n        !this.target.contains(event.target)\n      ) {\n        this.trigger.click()\n      }\n    })\n  }\n\n  /**\n   * Marca o alvo com o atributo data-dropdown\n   * @override\n   * @private\n   */\n  _setTargetVisibilityStatus() {\n    super._setTargetVisibilityStatus()\n    if (this.target.hasAttribute('hidden')) {\n      this.target.removeAttribute('data-dropdown')\n    } else {\n      this.target.setAttribute('data-dropdown', '')\n    }\n  }\n\n  /**\n   * Trata o estado de visualização do pai do alvo\n   * @private\n   */\n  _setParentsTargetVisibilityStatus() {\n    if (this.target.hasAttribute('hidden')) {\n      this.target.parentElement.classList.remove('dropdown')\n    } else {\n      this.target.parentElement.classList.add('dropdown')\n    }\n  }\n\n  /**\n * Para itens pertencentes a dropdown do tipo menuitem, permite\n * o uso das teclas de seta para cima e para baixo do teclado.\n * @private\n */\n  _initializeDropdownItems() {\n    this.dropdownItems = Array.from(this.target.querySelectorAll('[role=\"menuitem\"]'));\n    this.dropdownItems.forEach((item) => {\n      item.addEventListener('keydown', (event) => {\n        const key = event.key;\n        const currentIndex = this.dropdownItems.indexOf(item);\n        const lastIndex = this.dropdownItems.length - 1;\n\n        switch (key) {\n          case 'ArrowUp':\n            event.preventDefault();\n            const prevIndex = (currentIndex - 1 + this.dropdownItems.length) % this.dropdownItems.length;\n            this.dropdownItems[prevIndex].focus();\n            break;\n          case 'ArrowDown':\n            event.preventDefault();\n            const nextIndex = (currentIndex + 1) % this.dropdownItems.length;\n            this.dropdownItems[nextIndex].focus();\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n\n  /**\n   * Handler para o evento de click no acionador do comportamento dropdown\n   * Lança um evento 'change' a cada troca\n   * @override\n   * @private\n   */\n  _handleTriggerClickBehavior() {\n    super._handleTriggerClickBehavior()\n    this._setParentsTargetVisibilityStatus()\n  }\n\n  /**\n   * Configura o comportamento dropdown\n   * @override\n   * @public\n   */\n  setBehavior() {\n    super.setBehavior()\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import Collapse from '../../partial/js/behavior/collapse'\nimport Dropdown from '../../partial/js/behavior/dropdown'\n\n/** Classe para instanciar um objeto BRTable*/\n/* eslint-disable complexity */\nclass BRTable {\n  /**\n   * Instancia do objeto\n   * @param {string} name - Nome do componente em minúsculo\n   * @param {object} component - Objeto referenciando a raiz do componente DOM\n   * @param {number} sequence - 'índice do componente para sobreposição'\n   */\n  constructor(name, component, sequence) {\n    this.name = name\n    this.component = component\n    this._header = this.component.querySelector('.header, .table-header')\n    this._table = this.component.querySelector('table')\n    this._sequence = sequence\n    this._setBehaviors()\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   */\n  _setBehaviors() {\n    this._makeResponsiveTable()\n    this._setHeaderWidth()\n    this._searchBehavior()\n    this._dropdownBehavior()\n    this._collpaseBehavior()\n    this._densityBehavior()\n    this._setClickActions()\n    this._getBRHeaderHeight()\n  }\n\n  /**\n   * Configura a altura do cabeçalho\n   * @private\n   */\n  _getBRHeaderHeight() {\n    const BRHeader = document.querySelector('.br-header')\n    if (BRHeader) {\n      window.addEventListener('scroll', () => {\n        this._header.style.top = `${BRHeader.clientHeight}px`\n      })\n    }\n  }\n\n  /**\n   * Configura reponsividade da tabela\n   * @private\n   */\n  _makeResponsiveTable() {\n    const responsiveClass = 'responsive'\n    if (!this.component.querySelector(`.${responsiveClass}`)) {\n      const responsiveElement = document.createElement('div')\n      responsiveElement.classList.add(responsiveClass)\n      responsiveElement.appendChild(this._table)\n      this._header.after(responsiveElement)\n    }\n  }\n\n  /**\n   * Configura rolagem\n   * @private\n   */\n  _makeScroller() {\n    const scrollerTag = document.createElement('div')\n    scrollerTag.classList.add('scroller')\n    for (const header of this._table.querySelectorAll('thead tr th')) {\n      const clonedHeader = document.createElement('div')\n      clonedHeader.classList.add('item')\n      clonedHeader.innerHTML = header.innerHTML\n      if (header.offsetWidth) {\n        clonedHeader.style.flex = `1 0 ${header.offsetWidth}px`\n      }\n      scrollerTag.appendChild(clonedHeader)\n      const checkbox = clonedHeader.querySelector('.br-checkbox')\n      if (checkbox) {\n        const input = checkbox.querySelector('input')\n        const label = checkbox.querySelector('label')\n        input.id = `${input.id}-clone`\n        label.setAttribute('for', input.id)\n      }\n    }\n    return scrollerTag\n  }\n\n  /**\n   * Configura largura do cabeçalho\n   * @private\n   */\n  _setHeaderWidth() {\n    for (const clonedHeader of this.component.querySelectorAll(\n      '.headers > div'\n    )) {\n      for (const [index, header] of this.component\n        .querySelectorAll('table thead tr th')\n        .entries()) {\n        clonedHeader.children[index].style.flex = `1 0 ${header.offsetWidth}px`\n      }\n    }\n  }\n\n  /**\n   * Configura coportamento do dropdown\n   * @private\n   */\n  _dropdownBehavior() {\n    this.component\n      .querySelectorAll('[data-toggle=\"dropdown\"]')\n      .forEach((trigger) => {\n        const config = {\n          iconToHide: 'fa-chevron-up',\n          iconToShow: 'fa-chevron-down',\n          trigger,\n          useIcons: true,\n        }\n        const dropdown = new Dropdown(config)\n        dropdown.setBehavior()\n      })\n  }\n\n  /**\n   * Configura comportamento de colapsar\n   * @private\n   */\n  _collpaseBehavior() {\n    this.component\n      .querySelectorAll('[data-toggle=\"collapse\"]')\n      .forEach((trigger) => {\n        const config = {\n          iconToHide: 'fa-chevron-up',\n          iconToShow: 'fa-chevron-down',\n          trigger,\n          useIcons: true,\n        }\n        const collapse = new Collapse(config)\n        collapse.setBehavior()\n      })\n  }\n\n  /**\n   * Configura comportamento da busca\n   * @private\n   */\n  _searchBehavior() {\n    if (this.component.dataset.search) {\n      const trigger = this.component.querySelector('[data-toggle=\"search\"]')\n      const target = this.component.querySelector('.search-bar')\n      const dismiss = this.component.querySelector('[data-dismiss=\"search\"]')\n\n      // Inicializar\n      this._searchInit(trigger)\n\n      // Abre busca\n      trigger.addEventListener('click', () => {\n        return this._searchOpen(trigger, target)\n      })\n\n      // Fecha busca\n      dismiss.addEventListener('click', () => {\n        return this._searchClose(trigger, target)\n      })\n      target.querySelector('input').addEventListener('keydown', (event) => {\n        if (event.key === 'Escape') {\n          this._searchClose(trigger, target)\n        }\n      })\n    }\n  }\n\n  /**\n   * Inicializa a busca\n   * @private\n   * @param {object} trigger - Objeto referente ao elemento que dispara a ação\n   */\n  _searchInit(trigger) {\n    trigger.setAttribute('aria-expanded', 'false')\n  }\n\n  /**\n   * Abre a busca\n   * @private\n   * @param {object} trigger - Objeto referente ao elemento que dispara a ação\n   * @param {object} target - Objeto referente ao alvo da ação\n   */\n  _searchOpen(trigger, target) {\n    trigger.setAttribute('aria-expanded', 'true')\n    target.classList.add('show')\n    target.parentElement.classList.add('show')\n    target.querySelector('input').focus()\n  }\n\n  /**\n   * Fecha a busca\n   * @private\n   * @param {object} trigger - Objeto referente ao elemento que dispara a ação\n   * @param {object} target - Objeto referente ao alvo da ação\n   */\n  _searchClose(trigger, target) {\n    target.querySelector('input').value = ''\n    target.classList.remove('show')\n    target.parentElement.classList.remove('show')\n    trigger.focus()\n    trigger.setAttribute('aria-expanded', 'false')\n  }\n\n  /**\n   * Configura densidades\n   * @private\n   */\n  _densityBehavior() {\n    const desityTriggers = this.component.querySelectorAll('[data-density]')\n    for (const desityTrigger of desityTriggers) {\n      desityTrigger.addEventListener('click', () => {\n        this.component.classList.remove('small', 'medium', 'large')\n        this.component.classList.add(desityTrigger.dataset.density)\n        this._dropdownClose(\n          desityTrigger\n            .closest('.dropdown')\n            .querySelector('[data-toggle=\"dropdown\"]')\n        )\n      })\n    }\n  }\n\n  /**\n   * Configura ações de clique\n   * @private\n   */\n  _setClickActions() {\n    const headerCheckbox = this.component.querySelector(\n      '.headers [type=\"checkbox\"]'\n    )\n    const tableCheckboxes = this.component.querySelectorAll(\n      'tbody [type=\"checkbox\"]'\n    )\n    const selectedBar = this.component.querySelector('.selected-bar')\n    const checkAlls = this.component.querySelectorAll(\n      '[data-toggle=\"check-all\"]'\n    )\n    for (const checkAll of checkAlls) {\n      checkAll.addEventListener('click', () => {\n        this._checkAllTable(selectedBar, tableCheckboxes, headerCheckbox)\n        if (checkAll.parentElement.classList.contains('br-list')) {\n          this._dropdownClose(\n            checkAll\n              .closest('.dropdown')\n              .querySelector('[data-toggle=\"dropdown\"]')\n          )\n        }\n      })\n    }\n    if (tableCheckboxes) {\n      for (const checkbox of tableCheckboxes) {\n        checkbox.addEventListener('change', () => {\n          this._checkRow(checkbox, selectedBar, tableCheckboxes, headerCheckbox)\n        })\n      }\n    }\n  }\n\n  /**\n   * Configura seleção da linha\n   * @private\n   * @param {object} checkbox - Objeto referente ao checkbox\n   * @param {boolean} check - define se a linha deve ser selecionada\n   */\n  _setRow(checkbox, check) {\n    const tr = checkbox.parentNode.parentNode.parentNode\n    if (check) {\n      tr.classList.add('is-selected')\n      checkbox.parentNode.classList.add('is-inverted')\n      checkbox.checked = true\n    } else {\n      tr.classList.remove('is-selected')\n      checkbox.parentNode.classList.remove('is-inverted')\n      checkbox.checked = false\n    }\n  }\n\n  /**\n   * Configura seleção da linha\n   * @private\n   * @param {object} checkbox - Objeto referente ao checkbox\n   * @param {object} selectedBar - Objeto referente a barra contextual\n   * @param {object} tableCheckboxes - Objeto referente a lista de checkboxes\n   * @param {object} headerCheckbox - Objeto referente ao checkbox do header\n   */\n  _checkRow(checkbox, selectedBar, tableCheckboxes, headerCheckbox) {\n    const check = checkbox.checked\n    this._setRow(checkbox, check)\n    this._setSelectedBar(\n      check ? 1 : -1,\n      selectedBar,\n      tableCheckboxes,\n      headerCheckbox\n    )\n  }\n\n  /**\n   * Seleciona todas as linhas\n   * @private\n   * @param {object} tableCheckboxes - Objeto referente a lista de checkboxes\n   */\n  _checkAllRows(tableCheckboxes) {\n    for (const checkbox of tableCheckboxes) {\n      this._setRow(checkbox, true)\n    }\n  }\n\n  /**\n   * Desseleciona todas as linhas\n   * @private\n   * @param {object} tableCheckboxes - Objeto referente a lista de checkboxes\n   */\n  _uncheckAllRows(tableCheckboxes) {\n    for (const checkbox of tableCheckboxes) {\n      this._setRow(checkbox, false)\n    }\n  }\n\n  /**\n   * Seleciona toda a tabela\n   * @private\n   * @param {object} selectedBar - Objeto referente a barra contextual\n   * @param {object} tableCheckboxes - Objeto referente a lista de checkboxes\n   * @param {object} headerCheckbox - Objeto referente ao checkbox do header\n   */\n  _checkAllTable(selectedBar, tableCheckboxes, headerCheckbox) {\n    let count = tableCheckboxes.length\n    const infoCount = selectedBar.querySelector('.info .count')\n    const total = parseInt(infoCount.innerHTML, 10)\n    if (total === count) {\n      this._uncheckAllRows(tableCheckboxes)\n      count = -1 * count\n    } else {\n      this._checkAllRows(tableCheckboxes)\n    }\n    this._setSelectedBar(count, selectedBar, tableCheckboxes, headerCheckbox)\n  }\n\n  /**\n   * Define visualização dos itens selecionados na barra contextual\n   * @private\n   * @param {number} count - número de itens selecionados\n   * @param {object} selectedBar - Objeto referente a barra contextual\n   * @param {object} tableCheckboxes - Objeto referente a lista de checkboxes\n   * @param {object} headerCheckbox - Objeto referente ao checkbox do header\n   */\n  _setSelectedBar(count, selectedBar, tableCheckboxes, headerCheckbox) {\n    const infoCount = selectedBar.querySelector('.info .count')\n    const infoText = selectedBar.querySelector('.info .text')\n    const total = count < 2 ? parseInt(infoCount.innerHTML, 10) + count : count\n    if (total > 0) {\n      selectedBar.classList.add('show')\n      infoCount.innerHTML = total\n      infoText.innerHTML = total > 1 ? 'itens selecionados' : 'item selecionado'\n      if (headerCheckbox) headerCheckbox.parentNode.classList.add('is-checking')\n      if (total === tableCheckboxes.length) {\n        if (headerCheckbox) {\n          headerCheckbox.checked = true\n          headerCheckbox.parentNode.classList.remove('is-checking')\n        }\n      }\n    } else {\n      infoCount.innerHTML = 0\n      if (headerCheckbox) {\n        headerCheckbox.checked = false\n        headerCheckbox.parentNode.classList.remove('is-checking')\n      }\n      selectedBar.classList.remove('show')\n    }\n  }\n}\n\nexport default BRTable\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","Collapse","constructor","trigger","iconToShow","iconToHide","useIcons","this","breakpoint","getAttribute","setIconToShow","setIconToHide","_setTarget","_setUp","target","document","querySelector","_checkBreakpoint","window","matchMedia","matches","removeAttribute","_setVisibilityStatus","_toggleIcon","setAttribute","_setTriggerVisibilityStatus","_setTargetVisibilityStatus","hasAttribute","_handleTriggerKeyPress","_handleTriggerClickBehavior","_focusOnFirstItem","_toggleVisibility","dispatchEvent","Event","_showTarget","_hideTarget","focusableElements","querySelectorAll","firstItem","Array","from","find","element","scrollIntoView","block","forEach","icon","classList","remove","add","setBehavior","addEventListener","event","type","key","preventDefault","focus","Dropdown","super","_hideDropdown","_initializeDropdownItems","contains","click","_setParentsTargetVisibilityStatus","parentElement","dropdownItems","item","currentIndex","indexOf","lastIndex","length","prevIndex","nextIndex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","BRTable","name","component","sequence","_header","_table","_sequence","_setBehaviors","_makeResponsiveTable","_setHeaderWidth","_searchBehavior","_dropdownBehavior","_collpaseBehavior","_densityBehavior","_setClickActions","_getBRHeaderHeight","BRHeader","style","top","clientHeight","responsiveClass","responsiveElement","createElement","appendChild","after","_makeScroller","scrollerTag","header","clonedHeader","innerHTML","offsetWidth","flex","checkbox","input","label","id","index","entries","children","config","dropdown","collapse","dataset","search","dismiss","_searchInit","_searchOpen","_searchClose","value","desityTriggers","desityTrigger","density","_dropdownClose","closest","headerCheckbox","tableCheckboxes","selectedBar","checkAlls","checkAll","_checkAllTable","_checkRow","_setRow","check","tr","parentNode","checked","_setSelectedBar","_checkAllRows","_uncheckAllRows","count","infoCount","total","parseInt","infoText"],"sourceRoot":""}