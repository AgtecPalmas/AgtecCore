{"version":3,"file":"components/table/table.min.js","mappings":"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","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/table/table.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","import Collapse from '../../partial/js/behavior/collapse'\nimport Dropdown from '../../partial/js/behavior/dropdown'\n\n/** Classe para instanciar um objeto BRTable*/\n/* eslint-disable complexity */\nclass BRTable {\n  /**\n   * Instancia do objeto\n   * @param {string} name - Nome do componente em minúsculo\n   * @param {object} component - Objeto referenciando a raiz do componente DOM\n   * @param {number} sequence - 'índice do componente para sobreposição'\n   */\n  constructor(name, component, sequence) {\n    this.name = name\n    this.component = component\n    this._header = this.component.querySelector('.header, .table-header')\n    this._table = this.component.querySelector('table')\n    this._sequence = sequence\n    this._setBehaviors()\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   */\n  _setBehaviors() {\n    this._makeResponsiveTable()\n    this._setHeaderWidth()\n    this._searchBehavior()\n    this._dropdownBehavior()\n    this._collpaseBehavior()\n    this._densityBehavior()\n    this._setClickActions()\n    this._getBRHeaderHeight()\n  }\n\n  /**\n   * Configura a altura do cabeçalho\n   * @private\n   */\n  _getBRHeaderHeight() {\n    const BRHeader = document.querySelector('.br-header')\n    if (BRHeader) {\n      window.addEventListener('scroll', () => {\n        this._header.style.top = `${BRHeader.clientHeight}px`\n      })\n    }\n  }\n\n  /**\n   * Configura reponsividade da tabela\n   * @private\n   */\n  _makeResponsiveTable() {\n    const responsiveClass = 'responsive'\n    if (!this.component.querySelector(`.${responsiveClass}`)) {\n      const responsiveElement = document.createElement('div')\n      responsiveElement.classList.add(responsiveClass)\n      responsiveElement.appendChild(this._table)\n      this._header.after(responsiveElement)\n    }\n  }\n\n  /**\n   * Configura rolagem\n   * @private\n   */\n  _makeScroller() {\n    const scrollerTag = document.createElement('div')\n    scrollerTag.classList.add('scroller')\n    for (const header of this._table.querySelectorAll('thead tr th')) {\n      const clonedHeader = document.createElement('div')\n      clonedHeader.classList.add('item')\n      clonedHeader.innerHTML = header.innerHTML\n      if (header.offsetWidth) {\n        clonedHeader.style.flex = `1 0 ${header.offsetWidth}px`\n      }\n      scrollerTag.appendChild(clonedHeader)\n      const checkbox = clonedHeader.querySelector('.br-checkbox')\n      if (checkbox) {\n        const input = checkbox.querySelector('input')\n        const label = checkbox.querySelector('label')\n        input.id = `${input.id}-clone`\n        label.setAttribute('for', input.id)\n      }\n    }\n    return scrollerTag\n  }\n\n  /**\n   * Configura largura do cabeçalho\n   * @private\n   */\n  _setHeaderWidth() {\n    for (const clonedHeader of this.component.querySelectorAll(\n      '.headers > div'\n    )) {\n      for (const [index, header] of this.component\n        .querySelectorAll('table thead tr th')\n        .entries()) {\n        clonedHeader.children[index].style.flex = `1 0 ${header.offsetWidth}px`\n      }\n    }\n  }\n\n  /**\n   * Configura coportamento do dropdown\n   * @private\n   */\n  _dropdownBehavior() {\n    this.component\n      .querySelectorAll('[data-toggle=\"dropdown\"]')\n      .forEach((trigger) => {\n        const config = {\n          iconToHide: 'fa-chevron-up',\n          iconToShow: 'fa-chevron-down',\n          trigger,\n          useIcons: true,\n        }\n        const dropdown = new Dropdown(config)\n        dropdown.setBehavior()\n      })\n  }\n\n  /**\n   * Configura comportamento de colapsar\n   * @private\n   */\n  _collpaseBehavior() {\n    this.component\n      .querySelectorAll('[data-toggle=\"collapse\"]')\n      .forEach((trigger) => {\n        const config = {\n          iconToHide: 'fa-chevron-up',\n          iconToShow: 'fa-chevron-down',\n          trigger,\n          useIcons: true,\n        }\n        const collapse = new Collapse(config)\n        collapse.setBehavior()\n      })\n  }\n\n  /**\n   * Configura comportamento da busca\n   * @private\n   */\n  _searchBehavior() {\n    if (this.component.dataset.search) {\n      const trigger = this.component.querySelector('[data-toggle=\"search\"]')\n      const target = this.component.querySelector('.search-bar')\n      const dismiss = this.component.querySelector('[data-dismiss=\"search\"]')\n\n      // Inicializar\n      this._searchInit(trigger)\n\n      // Abre busca\n      trigger.addEventListener('click', () => {\n        return this._searchOpen(trigger, target)\n      })\n\n      // Fecha busca\n      dismiss.addEventListener('click', () => {\n        return this._searchClose(trigger, target)\n      })\n      target.querySelector('input').addEventListener('keydown', (event) => {\n        if (event.key === 'Escape') {\n          this._searchClose(trigger, target)\n        }\n      })\n    }\n  }\n\n  /**\n   * Inicializa a busca\n   * @private\n   * @param {object} trigger - Objeto referente ao elemento que dispara a ação\n   */\n  _searchInit(trigger) {\n    trigger.setAttribute('aria-expanded', 'false')\n  }\n\n  /**\n   * Abre a busca\n   * @private\n   * @param {object} trigger - Objeto referente ao elemento que dispara a ação\n   * @param {object} target - Objeto referente ao alvo da ação\n   */\n  _searchOpen(trigger, target) {\n    trigger.setAttribute('aria-expanded', 'true')\n    target.classList.add('show')\n    target.parentElement.classList.add('show')\n    target.querySelector('input').focus()\n  }\n\n  /**\n   * Fecha a busca\n   * @private\n   * @param {object} trigger - Objeto referente ao elemento que dispara a ação\n   * @param {object} target - Objeto referente ao alvo da ação\n   */\n  _searchClose(trigger, target) {\n    target.querySelector('input').value = ''\n    target.classList.remove('show')\n    target.parentElement.classList.remove('show')\n    trigger.focus()\n    trigger.setAttribute('aria-expanded', 'false')\n  }\n\n  /**\n   * Configura densidades\n   * @private\n   */\n  _densityBehavior() {\n    const desityTriggers = this.component.querySelectorAll('[data-density]')\n    for (const desityTrigger of desityTriggers) {\n      desityTrigger.addEventListener('click', () => {\n        this.component.classList.remove('small', 'medium', 'large')\n        this.component.classList.add(desityTrigger.dataset.density)\n        this._dropdownClose(\n          desityTrigger\n            .closest('.dropdown')\n            .querySelector('[data-toggle=\"dropdown\"]')\n        )\n      })\n    }\n  }\n\n  /**\n   * Configura ações de clique\n   * @private\n   */\n  _setClickActions() {\n    const headerCheckbox = this.component.querySelector(\n      '.headers [type=\"checkbox\"]'\n    )\n    const tableCheckboxes = this.component.querySelectorAll(\n      'tbody [type=\"checkbox\"]'\n    )\n    const selectedBar = this.component.querySelector('.selected-bar')\n    const checkAlls = this.component.querySelectorAll(\n      '[data-toggle=\"check-all\"]'\n    )\n    for (const checkAll of checkAlls) {\n      checkAll.addEventListener('click', () => {\n        this._checkAllTable(selectedBar, tableCheckboxes, headerCheckbox)\n        if (checkAll.parentElement.classList.contains('br-list')) {\n          this._dropdownClose(\n            checkAll\n              .closest('.dropdown')\n              .querySelector('[data-toggle=\"dropdown\"]')\n          )\n        }\n      })\n    }\n    if (tableCheckboxes) {\n      for (const checkbox of tableCheckboxes) {\n        checkbox.addEventListener('change', () => {\n          this._checkRow(checkbox, selectedBar, tableCheckboxes, headerCheckbox)\n        })\n      }\n    }\n  }\n\n  /**\n   * Configura seleção da linha\n   * @private\n   * @param {object} checkbox - Objeto referente ao checkbox\n   * @param {boolean} check - define se a linha deve ser selecionada\n   */\n  _setRow(checkbox, check) {\n    const tr = checkbox.parentNode.parentNode.parentNode\n    if (check) {\n      tr.classList.add('is-selected')\n      checkbox.parentNode.classList.add('is-inverted')\n      checkbox.checked = true\n    } else {\n      tr.classList.remove('is-selected')\n      checkbox.parentNode.classList.remove('is-inverted')\n      checkbox.checked = false\n    }\n  }\n\n  /**\n   * Configura seleção da linha\n   * @private\n   * @param {object} checkbox - Objeto referente ao checkbox\n   * @param {object} selectedBar - Objeto referente a barra contextual\n   * @param {object} tableCheckboxes - Objeto referente a lista de checkboxes\n   * @param {object} headerCheckbox - Objeto referente ao checkbox do header\n   */\n  _checkRow(checkbox, selectedBar, tableCheckboxes, headerCheckbox) {\n    const check = checkbox.checked\n    this._setRow(checkbox, check)\n    this._setSelectedBar(\n      check ? 1 : -1,\n      selectedBar,\n      tableCheckboxes,\n      headerCheckbox\n    )\n  }\n\n  /**\n   * Seleciona todas as linhas\n   * @private\n   * @param {object} tableCheckboxes - Objeto referente a lista de checkboxes\n   */\n  _checkAllRows(tableCheckboxes) {\n    for (const checkbox of tableCheckboxes) {\n      this._setRow(checkbox, true)\n    }\n  }\n\n  /**\n   * Desseleciona todas as linhas\n   * @private\n   * @param {object} tableCheckboxes - Objeto referente a lista de checkboxes\n   */\n  _uncheckAllRows(tableCheckboxes) {\n    for (const checkbox of tableCheckboxes) {\n      this._setRow(checkbox, false)\n    }\n  }\n\n  /**\n   * Seleciona toda a tabela\n   * @private\n   * @param {object} selectedBar - Objeto referente a barra contextual\n   * @param {object} tableCheckboxes - Objeto referente a lista de checkboxes\n   * @param {object} headerCheckbox - Objeto referente ao checkbox do header\n   */\n  _checkAllTable(selectedBar, tableCheckboxes, headerCheckbox) {\n    let count = tableCheckboxes.length\n    const infoCount = selectedBar.querySelector('.info .count')\n    const total = parseInt(infoCount.innerHTML, 10)\n    if (total === count) {\n      this._uncheckAllRows(tableCheckboxes)\n      count = -1 * count\n    } else {\n      this._checkAllRows(tableCheckboxes)\n    }\n    this._setSelectedBar(count, selectedBar, tableCheckboxes, headerCheckbox)\n  }\n\n  /**\n   * Define visualização dos itens selecionados na barra contextual\n   * @private\n   * @param {number} count - número de itens selecionados\n   * @param {object} selectedBar - Objeto referente a barra contextual\n   * @param {object} tableCheckboxes - Objeto referente a lista de checkboxes\n   * @param {object} headerCheckbox - Objeto referente ao checkbox do header\n   */\n  _setSelectedBar(count, selectedBar, tableCheckboxes, headerCheckbox) {\n    const infoCount = selectedBar.querySelector('.info .count')\n    const infoText = selectedBar.querySelector('.info .text')\n    const total = count < 2 ? parseInt(infoCount.innerHTML, 10) + count : count\n    if (total > 0) {\n      selectedBar.classList.add('show')\n      infoCount.innerHTML = total\n      infoText.innerHTML = total > 1 ? 'itens selecionados' : 'item selecionado'\n      if (headerCheckbox) headerCheckbox.parentNode.classList.add('is-checking')\n      if (total === tableCheckboxes.length) {\n        if (headerCheckbox) {\n          headerCheckbox.checked = true\n          headerCheckbox.parentNode.classList.remove('is-checking')\n        }\n      }\n    } else {\n      infoCount.innerHTML = 0\n      if (headerCheckbox) {\n        headerCheckbox.checked = false\n        headerCheckbox.parentNode.classList.remove('is-checking')\n      }\n      selectedBar.classList.remove('show')\n    }\n  }\n}\n\nexport default BRTable\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","BRTable","constructor","name","component","sequence","this","_header","querySelector","_table","_sequence","_setBehaviors","_makeResponsiveTable","_setHeaderWidth","_searchBehavior","_dropdownBehavior","_collpaseBehavior","_densityBehavior","_setClickActions","_getBRHeaderHeight","BRHeader","document","window","addEventListener","style","top","clientHeight","responsiveClass","responsiveElement","createElement","classList","add","appendChild","after","_makeScroller","scrollerTag","header","querySelectorAll","clonedHeader","innerHTML","offsetWidth","flex","checkbox","input","label","id","setAttribute","index","entries","children","forEach","trigger","config","dropdown","Dropdown","iconToHide","iconToShow","useIcons","setBehavior","collapse","Collapse","dataset","search","target","dismiss","_searchInit","_searchOpen","_searchClose","event","key","parentElement","focus","value","remove","desityTriggers","desityTrigger","density","_dropdownClose","closest","headerCheckbox","tableCheckboxes","selectedBar","checkAlls","checkAll","_checkAllTable","contains","_checkRow","_setRow","check","tr","parentNode","checked","_setSelectedBar","_checkAllRows","_uncheckAllRows","count","length","infoCount","total","parseInt","infoText"],"sourceRoot":""}