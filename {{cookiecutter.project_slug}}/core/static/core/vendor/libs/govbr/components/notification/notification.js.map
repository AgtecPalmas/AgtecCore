{"version":3,"file":"components/notification/notification.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;ACVuD;AACvD;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;;AAEA,sEAAe,8DAAc;;;;;;AChG7B","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/notification/notification.js","webpack://core/./src/components/notification/_notification.scss?9bd5"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","import Tooltip from '../../partial/js/behavior/tooltip'\n/** Classe para instanciar um objeto BRNotification*/\nclass BRNotification {\n  /**\n   * Instancia do objeto\n   * @param {string} name - Nome do componente em minúsculo\n   * @param {object} component - Objeto referenciando a raiz do componente DOM\n   */\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this.menuBtns = component.querySelectorAll('.contextual-btn')\n    this.hideEvents = ['mouseleave', 'blur']\n    this._setBehavior()\n  }\n\n  /**\n   * Esconde a notificação relativa a referência\n   * @private\n   * @property {object} action - Referência ao Objeto que dispara a ação\n   */\n  _hideNotification(action) {\n    const notification = action.parentNode.parentNode\n    notification.setAttribute('hidden', '')\n  }\n\n  /**\n   * Esconde todas as notificações relativa a referência\n   * @private\n   * @property {object} action - Referência ao Objeto que dispara a ação\n   */\n  _hideAllNotifications(action) {\n    const notifications =\n      action.parentNode.parentNode.parentNode.querySelectorAll('.br-item')\n    notifications.forEach((notification) => {\n      notification.setAttribute('hidden', '')\n    })\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   */\n  _setBehavior() {\n    for (const button of this.component.querySelectorAll(\n      '.br-notification .close'\n    )) {\n      button.addEventListener('click', () => {\n        this._dismiss(this.component)\n      })\n    }\n    this._notificationTooltip()\n  }\n\n  /**\n   * Define tooltip para a notificação\n   * @private\n   */\n  _notificationTooltip() {\n    const TooltipExampleList = []\n\n    window.document\n      .querySelectorAll(':not(.br-header) .notification-tooltip')\n      .forEach((TooltipNotification) => {\n        const texttooltip =\n          TooltipNotification.getAttribute('data-tooltip-text')\n        const config = {\n          activator: TooltipNotification,\n          placement: 'top',\n          textTooltip: texttooltip,\n        }\n        for (\n          parent = TooltipNotification.parentNode;\n          parent;\n          parent = parent.parentNode\n        ) {\n          if (parent.classList)\n            if (parent.classList.contains('header-avatar')) {\n              return ''\n            }\n        }\n        TooltipExampleList.push(new Tooltip(config))\n        return ''\n      })\n  }\n\n  /**\n   * Adiciona classe para refletir comportamento de fechar\n   * @private\n   * @property {object} componente - Referência ao Objeto\n   */\n  _dismiss(component) {\n    component.classList.add('close')\n  }\n}\n\nexport default BRNotification\n","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}