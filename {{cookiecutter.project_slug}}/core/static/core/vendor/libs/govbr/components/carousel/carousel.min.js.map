{"version":3,"file":"components/carousel/carousel.min.js","mappings":"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","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/carousel/carousel.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","import Swipe from '../../partial/js/behavior/swipe'\nimport BRStep from '../step/step'\nclass BRCarousel {\n  constructor(name, component) {\n    /**\n     * Instancia um componente carousel\n     * @param {string} name - Nome do componente\n     * @param {object} component - Objeto referenciando a raiz do componente DOM\n     * @property {number} activeStageNum - Número do palco ativo\n     * @property {array} DOMStrings - instancia dos elementos internos do componente\n     * @property {BRStep} DOMStrings - instancia dos elemento step interno\n     */\n    this.name = name\n    this.component = component\n    this.activeStageNum = 0\n    // Elementos DOM\n    this.DOMstrings = {\n      carouselNextBtn: this.component.querySelector('.carousel-btn-next'),\n      carouselPages: this.component.querySelectorAll('.carousel-page'),\n      carouselPrevBtn: this.component.querySelector('.carousel-btn-prev'),\n      carouselStage: this.component.querySelector('.carousel-stage'),\n      circular: this.component.hasAttribute('data-circular'),\n      step: this.component.querySelector('.br-step'),\n    }\n    this.step = new BRStep('br-step', this.DOMstrings.step)\n    this._setBehavior()\n  }\n\n  /**\n   * Remove os atributos de uma lista de elementos\n   * @param {object} elemSet - Lista de elementos\n   * @param {string} button - Nome do atributo\n   */\n  removeAttributes(elemSet, attrName) {\n    elemSet.forEach((elem) => {\n      elem.removeAttribute(attrName)\n    })\n  }\n\n  /**\n   * Retorna o passo ativo\n   */\n  getActiveStep() {\n    return this.step.activeStepNum\n  }\n\n  /**\n   * Define o passo ativo\n   * @param {number} activeStepNum - número do passo\n   */\n  setActiveStep(activeStepNum) {\n    this.step.setActiveStep(activeStepNum)\n  }\n\n  /**\n   * Retorna o palco ativo\n   */\n  getActiveStage() {\n    let activeStage\n    this.DOMstrings.carouselPages.forEach((stage) => {\n      if (stage.hasAttribute('active')) {\n        activeStage = stage\n      }\n    })\n    return activeStage\n  }\n\n  /**\n   * Define o palco ativo\n   * @param {number} num - número do palco\n   */\n  setActiveStage(num) {\n    // remove active atts from all the stages\n    this.removeAttributes(this.DOMstrings.carouselPages, 'active')\n\n    // show active stage\n    this.DOMstrings.carouselPages.forEach((stage, index) => {\n      // motion efect\n      if (index > num) {\n        stage.style.left = '100%'\n      } else {\n        stage.style.left = '-100%'\n      }\n      // set active attrb\n      if (index === num) {\n        stage.setAttribute('active', '')\n        this.activeStageNum = num\n      }\n    })\n    this.disabledBtns()\n  }\n\n\n  /**\n   * Desabilita os botões se o carousel não for circular\n   */\n  disabledBtns() {\n    // Disables Carousel Buttons\n    if (!this.DOMstrings.circular) {\n      if (this.activeStageNum === 0) {\n        if(this.DOMstrings.carouselNextBtn){\n          if(document.activeElement==this.DOMstrings.carouselPrevBtn)this.DOMstrings.carouselNextBtn.focus()\n          this.DOMstrings.carouselPrevBtn.setAttribute('disabled', '')\n        }\n\n\n      } else {\n        this.DOMstrings.carouselPrevBtn.removeAttribute('disabled')\n      }\n      if (this.activeStageNum === this.DOMstrings.carouselPages.length - 1) {\n        if(this.DOMstrings.carouselNextBtn){\n          if(document.activeElement==this.DOMstrings.carouselNextBtn)this.DOMstrings.carouselPrevBtn.focus()\n          this.DOMstrings.carouselNextBtn.setAttribute('disabled', '')\n        }\n\n      } else {\n        this.DOMstrings.carouselNextBtn.removeAttribute('disabled')\n      }\n    }\n  }\n\n  /**\n   * Muda a página ativa incrementalmente - ações de botões e swap\n   * @param {number} num - incremento\n   */\n  shiftPage(num) {\n    //find active stage\n    const activeStage = this.getActiveStage()\n    const PanelsSize = this.DOMstrings.carouselPages.length - 1\n    let activeStageNum = Array.from(this.DOMstrings.carouselPages).indexOf(\n      activeStage\n    )\n    // set active step and active stage onclick\n    if (num < 0) {\n      // Volta o slide\n      if (this.DOMstrings.circular) {\n        activeStageNum =\n          activeStageNum === 0 ? PanelsSize : (activeStageNum -= 1)\n      } else {\n        activeStageNum -= activeStageNum === 0 ? 0 : 1\n      }\n    } else {\n      // Passar p/ frente o slide\n      if (this.DOMstrings.circular) {\n        activeStageNum =\n          activeStageNum === PanelsSize ? 0 : (activeStageNum += 1)\n      } else {\n        activeStageNum += activeStageNum === PanelsSize ? 0 : 1\n      }\n    }\n    this.setActiveStep(activeStageNum)\n    this.setActiveStage(activeStageNum)\n  }\n\n  /**\n   * Define os comportamentos do componente\n   * @private\n   */\n  _setBehavior() {\n    this.DOMstrings.carouselNextBtn.addEventListener('click', () => {\n      this.shiftPage(1)\n    })\n\n    this.DOMstrings.carouselPrevBtn.addEventListener('click', () => {\n      this.shiftPage(-1)\n    })\n\n    this.DOMstrings.step.addEventListener('click', () => {\n      this.setActiveStage(this.step.activeStepNum)\n    })\n\n    // Swipe\n    const dispatcher = new Swipe(this.DOMstrings.carouselStage)\n    dispatcher.on('SWIPE_LEFT', () => {\n      this.shiftPage(1)\n    })\n    dispatcher.on('SWIPE_RIGHT', () => {\n      this.shiftPage(-1)\n    })\n    this.disabledBtns()\n  }\n}\n\nexport default BRCarousel\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","BRCarousel","constructor","name","component","this","activeStageNum","DOMstrings","carouselNextBtn","querySelector","carouselPages","querySelectorAll","carouselPrevBtn","carouselStage","circular","hasAttribute","step","BRStep","_setBehavior","removeAttributes","elemSet","attrName","forEach","elem","removeAttribute","getActiveStep","activeStepNum","setActiveStep","getActiveStage","activeStage","stage","setActiveStage","num","index","style","left","setAttribute","disabledBtns","document","activeElement","focus","length","shiftPage","PanelsSize","Array","from","indexOf","addEventListener","dispatcher","Swipe","on"],"sourceRoot":""}