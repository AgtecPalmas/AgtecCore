{"version":3,"file":"components/breadcrumb/breadcrumb.min.js","mappings":"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","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/breadcrumb/breadcrumb.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","class BRBreadcrumb {\n  /**\n   * Instancia um componente breadcrumb\n   * @param {string} name - nome do componente\n   * @param {object} component - referencia ao objeto do DOM\n   **/\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this._setBehavior()\n  }\n\n  /**\n   * Define os comportamentos do componente\n   * @private\n   */\n  _setBehavior() {\n    this._setView()\n    window.addEventListener('resize', () => {\n      this._setView()\n    })\n    window.document.addEventListener('click', (event) => {\n      if (\n        !this.component.contains(event.target) &&\n        this.component.querySelector('.br-card')\n      ) {\n        this.component.querySelector('.br-card').remove()\n      }\n    })\n\n    // window.addEventListener('resize', (event) => {})\n  }\n  /**\n   * Reseta a view do breadcrumb\n   */\n  resetBreadcrumbs() {\n    this._reset()\n\n    const brcardBreadcrumb = this.component.querySelector('.br-card')\n    if (brcardBreadcrumb !== null) {\n      brcardBreadcrumb.remove()\n    }\n    this._setView()\n  }\n\n  /**\n   * Atualiza a visualização do componente\n   * @private\n   */\n  _setView() {\n    this._reset()\n    for (const crumbList of this.component.querySelectorAll('.crumb-list')) {\n      const crumbs = crumbList.querySelectorAll('.crumb:not([data-active])')\n      if (window.innerWidth < 575) {\n        if (crumbs.length !== 1) {\n          crumbs.forEach((crumb) => {\n            crumb.classList.add('d-none')\n          })\n          this._insertExpandButton()\n        }\n      } else {\n        if (\n          crumbList.scrollWidth > crumbList.offsetWidth ||\n          crumbs.length > 5\n        ) {\n          crumbs.forEach((crumb, index) => {\n            if (index > 0 && index < crumbs.length - 1) {\n              crumb.classList.add('d-none')\n            }\n          })\n          this._insertExpandButton()\n        }\n      }\n    }\n  }\n\n  /**\n   * Insere botao de expandir\n   * @private\n   */\n  _insertExpandButton() {\n    const crumb = this._createCrumb()\n    const crumbList = this.component.querySelector('.crumb-list')\n    const crumbs = crumbList.querySelectorAll('.crumb')\n    crumbList.insertBefore(crumb, crumbs[1])\n  }\n\n  /**\n   * Reinicia componente\n   * @private\n   */\n  _reset() {\n    this.component.querySelectorAll('.crumb-list .crumb').forEach((crumb) => {\n      if (crumb.classList.contains('menu-mobil')) {\n        crumb.remove()\n      } else {\n        crumb.classList.remove('d-none')\n      }\n    })\n  }\n\n  /**\n   * Insere elementos\n   * @private\n   */\n  _createCrumb() {\n    const crumb = document.createElement('li')\n    crumb.classList.add('crumb', 'menu-mobil')\n    crumb.setAttribute('data-toggle', 'dropdown')\n\n    const button = document.createElement('button')\n    button.classList.add('br-button', 'circle')\n\n    const span = document.createElement('span')\n    span.classList.add('sr-only')\n    span.innerHTML = 'Botão Menu'\n\n    const folderIcon = document.createElement('i')\n    folderIcon.classList.add('fas', 'fa-folder-plus')\n\n    const chevronIcon = document.createElement('i')\n    chevronIcon.classList.add('icon', 'fas', 'fa-chevron-right')\n\n    crumb.appendChild(chevronIcon)\n    crumb.appendChild(button)\n    button.appendChild(span)\n    button.appendChild(folderIcon)\n\n    crumb.addEventListener('click', () => {\n      let card = this.component.querySelector('.br-card')\n      if (card) {\n        folderIcon.classList.remove('fas', 'fa-folder-minus')\n        folderIcon.classList.add('fas', 'fa-folder-plus')\n        this.component.querySelector('.br-card').remove()\n      } else {\n        folderIcon.classList.remove('fas', 'fa-folder-plus')\n        folderIcon.classList.add('fas', 'fa-folder-minus')\n        card = this._createList()\n        this.component.appendChild(card)\n      }\n    })\n\n    return crumb\n  }\n\n  /**\n   * Cria lista\n   * @private\n   */\n  _createList() {\n    const card = document.createElement('div')\n    card.classList.add('br-card')\n\n    this.component.querySelectorAll('.crumb-list .crumb').forEach((crumb) => {\n      if (crumb.classList.contains('d-none')) {\n        const item = document.createElement('div')\n        item.classList.add('br-item')\n\n        if (!crumb.classList.contains('home')) {\n          item.appendChild(crumb.querySelector('a').cloneNode(true))\n          card.appendChild(item)\n        }\n      }\n    })\n\n    return card\n  }\n}\n\nexport default BRBreadcrumb\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","BRBreadcrumb","constructor","name","component","this","_setBehavior","_setView","window","addEventListener","document","event","contains","target","querySelector","remove","resetBreadcrumbs","_reset","brcardBreadcrumb","crumbList","querySelectorAll","crumbs","innerWidth","length","forEach","crumb","classList","add","_insertExpandButton","scrollWidth","offsetWidth","index","_createCrumb","insertBefore","createElement","setAttribute","button","span","innerHTML","folderIcon","chevronIcon","appendChild","card","_createList","item","cloneNode"],"sourceRoot":""}