{"version":3,"file":"components/cookiebar/cookiebar.min.js","mappings":"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","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/cookiebar/selectors.js","webpack://core/./src/components/cookiebar/cookiebar.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","/** Constantes representando seletores para o cookiebar */\nexport const POLITICS_BUTTON = '.actions .br-button.secondary'\nexport const ACCEPT_BUTTON = '.actions .br-button.primary'\nexport const ACTION_BUTTONS = `${POLITICS_BUTTON}, ${ACCEPT_BUTTON}`\nexport const CLOSE_BUTTON = '.br-modal-header .br-button.close'\nexport const CONTAINER_FLUID = '.br-modal > .br-card .container-fluid'\nexport const WRAPPER = '.br-modal > .br-card .wrapper'\nexport const MODAL_FOOTER = '.br-modal > .br-card .br-modal-footer'\nexport const GROUP_INFO = '.main-content .group-info'\nexport const COOKIE_CARD = '.main-content .cookie-info .br-card'\nexport const BROAD_ALERT =\n  '.header .row:nth-child(1) div:nth-child(3) .feedback'\nexport const GROUP_ALERT = '.row:nth-child(1) div:nth-child(4) .feedback'\nexport const COOKIE_ALERT = '.row:nth-child(1) div:nth-child(2) .feedback'\nexport const BR_CHECKBOX = '.br-checkbox input[type=\"checkbox\"]'\nexport const BR_SWITCH = '.br-switch input[type=\"checkbox\"]'\nexport const CHECKBOX = `${BR_CHECKBOX}, ${BR_SWITCH}`\nexport const PARENT_CHECKBOX = '.main-content .br-checkbox input[data-parent]'\nexport const COOKIES_CHECKED = '.main-content .br-item .cookies-checked'\nexport const GROUP_BUTTON = '.main-content .br-item .br-button'\nexport const GROUP_NAME = '.main-content .br-item .group-name'\nexport const GROUP_SIZE = '.main-content .br-item .group-size'\nexport const BUTTON_ICON = '.br-button i.fas'\n","import Checkgroup from '../../partial/js/behavior/checkgroup'\nimport { CookiebarData } from './cookiebar-data'\nimport { CookiebarTemplates } from './cookiebar-templates'\nimport * as selectors from './selectors'\n\n/** Classe para instanciar um objeto cookiebar */\nexport default class BRCookiebar {\n  /**\n   * Instancia um objeto cookiebar\n   * @param {object} objeto - Objeto para destructuring com as propriedades abaixo\n   * @property {string} name - Nome do componente em minúsculo (br-cookiebar)\n   * @property {object} component - Objeto referenciando a raiz do componente DOM\n   * @property {string} json - JSON de entrada com dados do cookiebar\n   * @property {string} lang - Lingua para filtrar o JSON de entrada\n   * @property {string} mode - Mode de renderização do cookibar ('default' | 'open')\n   * @property {function} callback - Chamada no aceite do cookiebar com o JSON de saída como argumento\n   */\n  constructor({ name, component, json, lang, mode = 'default', callback }) {\n    this.name = name\n    this.component = component\n    this.data = new CookiebarData(json, lang)\n    this.templates = new CookiebarTemplates(this.data)\n    this.mode = mode\n    this.callback = callback\n    this._setUp()\n  }\n\n  /**\n   * Controla a instanciação do cookiebar\n   * @private\n   */\n  _setUp() {\n    this._buildCookiebar()\n    this._setBehavior()\n    this._showCookiebar()\n  }\n\n  /**\n   * Controla a construção do cookiebar com o uso de templates\n   * @private\n   */\n  _buildCookiebar() {\n    this.component.innerHTML = this.templates.setGlobalContentArea()\n  }\n\n  /**\n   * Controla o comportamento dos itens interativos do cookiebar\n   * @private\n   */\n  _setBehavior() {\n    this._setAcceptButtonBehavior()\n    this._setPoliticsButtonBehavior()\n    this._setCloseButtonBehavior()\n    this._setToggleGroupBehavior()\n    this._setCheckboxBehavior()\n    this._setSelectionBehavior()\n    this._setWindowResizeBehavior()\n  }\n\n  /**\n   * Trata o comportamento do botão de aceite do cookiebar\n   * @private\n   */\n  _setAcceptButtonBehavior() {\n    const acceptButton = this.component.querySelector(selectors.ACCEPT_BUTTON)\n\n    // Trata o aceite do cookiebar\n    acceptButton.addEventListener('click', () => {\n      this._hideCookiebar()\n      // this._resetCookiebar()\n      document.body.style.overflowY = 'auto'\n      this.callback(this._setOutputJSON())\n    })\n\n    // (Navegação por teclado) Mantém o foco no cookiebar quando ele está aberto\n    acceptButton.addEventListener('keydown', (event) => {\n      if (event.key === 'Tab') {\n        if (!this.component.classList.contains('default')) {\n          this.component.focus()\n        }\n      }\n    })\n\n    this._setActionButtonResponsive(acceptButton)\n  }\n\n  /**\n   * Trata o comportamento do botão de políticas/definições de cookies\n   * @private\n   */\n  _setPoliticsButtonBehavior() {\n    this.component\n      .querySelectorAll(selectors.POLITICS_BUTTON)\n      .forEach((politicsButton) => {\n        // Expande o cookiebar\n        politicsButton.addEventListener('click', () => {\n          politicsButton.classList.add('d-none')\n          this.component.classList.remove('default')\n          this.component.focus()\n          document.body.style.overflowY = 'hidden'\n          this._setOpenView()\n        })\n\n        this._setActionButtonResponsive(politicsButton)\n      })\n  }\n\n  /**\n   * Trata o comportamento do botão de fechar do cookiebar no modo open\n   * @orivate\n   */\n  _setCloseButtonBehavior() {\n    this.component\n      .querySelectorAll(selectors.CLOSE_BUTTON)\n      .forEach((closeButton) => {\n        // encolhe o cookiebar (volta ao cookiebar default)\n        closeButton.addEventListener('click', () => {\n          this.component.classList.add('default')\n          switch (this.mode) {\n            case 'open':\n              this._hideCookiebar()\n            // this._resetCookiebar()\n            default:\n          }\n\n          this.component\n            .querySelector(selectors.POLITICS_BUTTON)\n            .classList.remove('d-none')\n          document.body.style.overflowY = 'auto'\n\n          this._setDefaultView()\n        })\n      })\n  }\n\n  /**\n   * Trata o redimensionamento da tela\n   * @private\n   */\n  _setWindowResizeBehavior() {\n    window.addEventListener('resize', () => {\n      if (!this.component.classList.contains('default')) {\n        this._setOpenView()\n      }\n      this.component\n        .querySelectorAll(selectors.ACTION_BUTTONS)\n        .forEach((button) => {\n          this._setActionButtonResponsive(button)\n        })\n    })\n  }\n\n  /**\n   * Trata a responsividade de um botão de ação baseado na largura da tela\n   * @param {object} button - Elemento DOM que representa um botão de ação\n   * @private\n   */\n  _setActionButtonResponsive(button) {\n    if (window.matchMedia('(max-width: 574px)').matches) {\n      button.classList.add('block')\n    }\n    if (window.matchMedia('(min-width: 575px)').matches) {\n      button.classList.remove('block')\n    }\n  }\n\n  /**\n   * Trata a abertura/fechamento do grupo de cookies\n   * @private\n   */\n  _setToggleGroupBehavior() {\n    this.component\n      .querySelectorAll(\n        `${`${selectors.GROUP_BUTTON}, ${selectors.GROUP_NAME}, ${selectors.COOKIES_CHECKED}, ${selectors.GROUP_SIZE}`}`\n      )\n      .forEach((clickable) => {\n        clickable.addEventListener(\n          'click',\n          this._handleToggleGroupClick.bind(this)\n        )\n      })\n  }\n\n  /**\n   * Handler que trata do evento de click no grupo\n   * @param {object} event - Objeto Event\n   * @private\n   */\n  _handleToggleGroupClick(event) {\n    const element = this._getParentElementByClass(\n      event.currentTarget,\n      'br-item'\n    )\n    if (element.classList.contains('open')) {\n      element.classList.remove('open')\n      element.nextElementSibling\n        .querySelectorAll(selectors.BR_SWITCH)\n        .forEach((check) => {\n          check.setAttribute('tabindex', -1)\n        })\n      this._setGroupAttributes(element, 'Expandir')\n      this._toggleIcon(element, 'fa-angle-up', 'fa-angle-down')\n    } else {\n      element.classList.add('open')\n      element.nextElementSibling\n        .querySelectorAll(selectors.BR_SWITCH)\n        .forEach((check) => {\n          check.setAttribute('tabindex', 0)\n        })\n      this._setGroupAttributes(element, 'Retrair')\n      this._toggleIcon(element, 'fa-angle-down', 'fa-angle-up')\n      this._scrollUp(element)\n    }\n  }\n\n  /**\n   * Trata do comportamento do grupo de checkboxes do cookiebar\n   * @private\n   */\n  _setCheckboxBehavior() {\n    this.component\n      .querySelectorAll(selectors.PARENT_CHECKBOX)\n      .forEach((trigger) => {\n        this.checkgroupBehavior = new Checkgroup(trigger)\n        this.checkgroupBehavior.setBehavior()\n      })\n  }\n\n  /**\n   * Trata da seleção dos checkboxes\n   * @private\n   */\n  _setSelectionBehavior() {\n    this.component.querySelectorAll(selectors.CHECKBOX).forEach((checkbox) => {\n      checkbox.addEventListener('change', this._controlSelection.bind(this))\n    })\n  }\n\n  /**\n   * Handler para o evento change na seleção dos checkboxes\n   * @param {object} event - Objeto eventDOM\n   * @private\n   */\n  _controlSelection(event) {\n    const segment = event.currentTarget.id.split('-')\n    switch (segment[1]) {\n      case 'all':\n        this._setCheckAllBehavior(event.currentTarget)\n        break\n      case 'group':\n        this._setCheckgroupBehavior(event.currentTarget, segment[2])\n        break\n      case 'cookie':\n        this._setCheckCookieBehavior(\n          event.currentTarget,\n          segment[2],\n          segment[3]\n        )\n        break\n      default:\n    }\n  }\n\n  /**\n   * Trata a seleção do checkbox geral\n   * @param {object} checkbox - Elemento DOM que represeta um checkbox geral\n   * @private\n   */\n  _setCheckAllBehavior(checkbox) {\n    this.data.selectAll = checkbox.checked\n    this.data.allIndeterminated = checkbox.hasAttribute('indeterminate')\n      ? true\n      : false\n    this._displayBroadAlertMessage()\n  }\n\n  /**\n   * Trata da seleção do checkbox de grupo\n   * @param {object} checkbox - Elemento DOM que represta um checkbox de grupo\n   * @param {number} groupIndex - Índice do grupo\n   * @private\n   */\n  _setCheckgroupBehavior(checkbox, groupIndex) {\n    this.data.cookieGroups[groupIndex].groupSelected = checkbox.checked\n    this.data.cookieGroups[groupIndex].groupIndeterminated =\n      checkbox.hasAttribute('indeterminate') ? true : false\n    this.data.cookieGroups[groupIndex].cookieList.forEach(\n      (cookieData, cookieIndex) => {\n        if (!cookieData.cookieOptOut) {\n          cookieData.cookieSelected = checkbox.checked\n          this._displayCookieAlertMessage(groupIndex, cookieIndex)\n        }\n      }\n    )\n    this._displayGroupAlertMessage(groupIndex)\n  }\n\n  /**\n   * Trata da seleção do checkbox de cookie\n   * @param {object} checkbox - Elemento DOM que represeta um checkbox de cookie\n   * @param {number} groupIndex - Índice do grupo\n   * @param {number} cookieIndex - Índicd do cookie dentro do grupo\n   * @private\n   */\n  _setCheckCookieBehavior(checkbox, groupIndex, cookieIndex) {\n    this.data.cookieGroups[groupIndex].cookieList[cookieIndex].cookieSelected =\n      checkbox.checked\n    this._displayCookieAlertMessage(groupIndex, cookieIndex)\n  }\n\n  /**\n   * Controla a apresentação da mensagem geral\n   * @private\n   */\n  _displayBroadAlertMessage() {\n    this.component\n      .querySelectorAll(selectors.BROAD_ALERT)\n      .forEach((broadAlert) => {\n        if (\n          this.data.allAlertMessage &&\n          (!this.data.selectAll || this.data.allIndeterminated)\n        ) {\n          broadAlert.classList.remove('d-none')\n        } else {\n          broadAlert.classList.add('d-none')\n        }\n      })\n  }\n\n  /**\n   * Controla a apresentação da mensagem de grupo\n   * @param {number} groupIndex - Índice do grupo\n   * @private\n   */\n  _displayGroupAlertMessage(groupIndex) {\n    const group = this.component.querySelectorAll(selectors.GROUP_INFO)[\n      groupIndex\n    ]\n    group.querySelectorAll(selectors.GROUP_ALERT).forEach((groupAlert) => {\n      if (\n        this.data.cookieGroups[groupIndex].groupAlertMessage &&\n        (!this.data.cookieGroups[groupIndex].groupSelected ||\n          this.data.cookieGroups[groupIndex].groupIndeterminated)\n      ) {\n        groupAlert.classList.remove('d-none')\n      } else {\n        groupAlert.classList.add('d-none')\n      }\n    })\n  }\n\n  /**\n   * Controla a apresentação da mensagem de cookie\n   * @param {number} groupIndex - Índice do grupo\n   * @param {number} cookieIndex - Índice do cookie dentro do grupo\n   */\n  _displayCookieAlertMessage(groupIndex, cookieIndex) {\n    const group = this.component.querySelectorAll(selectors.GROUP_INFO)[\n      groupIndex\n    ]\n    const cookie = group.nextElementSibling.querySelectorAll(\n      selectors.COOKIE_CARD\n    )[cookieIndex]\n    cookie.querySelectorAll(selectors.COOKIE_ALERT).forEach((cookieAlert) => {\n      if (\n        this.data.cookieGroups[groupIndex].cookieList[cookieIndex]\n          .alertMessage &&\n        !this.data.cookieGroups[groupIndex].cookieList[cookieIndex]\n          .cookieSelected\n      ) {\n        cookieAlert.classList.remove('d-none')\n      } else {\n        cookieAlert.classList.add('d-none')\n      }\n    })\n  }\n\n  /**\n   * Busca um elemento DOM pai com uma determinada classe\n   * @param {object} element - Elemento DOM\n   * @param {string} className - Nome de uma classe para busca\n   * @returns {object} - Elemento DOM representando que contém uma determinada classe\n   * @private\n   */\n  _getParentElementByClass(element, className) {\n    parent = element.parentNode\n    while (!parent.classList.contains(className)) {\n      parent = parent.parentNode\n    }\n    return parent\n  }\n\n  /**\n   * Troca a classe do icone\n   * @param {object} element - Elemento DOM referente ao icone\n   * @param {string} oldIcon - Classe do icone que será retirada\n   * @param {string} newIcon - Classe do icone que será incluido\n   * @private\n   */\n  _toggleIcon(element, oldIcon, newIcon) {\n    element.querySelectorAll(selectors.BUTTON_ICON).forEach((icon) => {\n      icon.classList.remove(oldIcon)\n      icon.classList.add(newIcon)\n    })\n  }\n\n  /**\n   * Trata a label do atributo title e aria-label\n   * @param {object} element - Elemento DOM referente ao grupo\n   * @param {string} label - Label para o title e aria-label\n   * @private\n   */\n  _setGroupAttributes(element, label) {\n    element\n      .querySelectorAll(\n        `${`${selectors.GROUP_BUTTON}, ${selectors.GROUP_NAME}, ${selectors.COOKIES_CHECKED}, ${selectors.GROUP_SIZE}`}`\n      )\n      .forEach((item) => {\n        item.setAttribute('title', label)\n        item.setAttribute('aria-label', label)\n      })\n  }\n\n  /**\n   * Trata a rolagem da tela do grupo de cookies aberto\n   * @param {object} element - Elemento DOM que representa a grupo de cookies\n   * @private\n   */\n  _scrollUp(element) {\n    setTimeout(() => {\n      this.component.querySelectorAll(selectors.WRAPPER).forEach(() => {\n        setTimeout(() => {\n          element.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start',\n          })\n        }, 150)\n      }, 5000)\n    })\n  }\n\n  /**\n   * Mostra o cookiebar na tela com foco e no modo escolhido\n   * @private\n   */\n  _showCookiebar() {\n    this.component.classList.remove('d-none')\n    this.component.focus()\n    switch (this.mode) {\n      case 'open':\n        this.component.classList.remove('default')\n        this.component\n          .querySelectorAll(selectors.POLITICS_BUTTON)\n          .forEach((button) => {\n            button.classList.add('d-none')\n          })\n        document.body.style.overflowY = 'hidden'\n        this._setOpenView()\n      default:\n    }\n  }\n\n  /**\n   * Oculta o cookiebar na tela\n   * @private\n   */\n  _hideCookiebar() {\n    this.component.classList.add('d-none')\n  }\n\n  /**\n   * Configura a altura da parte rolável do cookiebar de acordo com a altura da janela\n   * @private\n   */\n  _setOpenView() {\n    const wrapper = this.component.querySelector(selectors.WRAPPER)\n    const containerFluid = this.component.querySelector(\n      selectors.CONTAINER_FLUID\n    )\n    const modalFooter = this.component.querySelector(selectors.MODAL_FOOTER)\n    const padding = window\n      .getComputedStyle(containerFluid, null)\n      .getPropertyValue('padding-top')\n      .match(/\\d+/)\n    const height = `${\n      window.innerHeight - padding * 2 - modalFooter.offsetHeight\n    }px`\n    wrapper.style.height = height\n  }\n\n  /**\n   * Configura a altura do cookiebar no modo default\n   * @private\n   */\n  _setDefaultView() {\n    this.component.querySelector(selectors.WRAPPER).removeAttribute('style')\n  }\n\n  /**\n   * Cria o JSON de saída do cookiebar\n   * @returns {string} - JSON de saída do cookiebar\n   * @private\n   */\n  _setOutputJSON() {\n    this.output = {}\n    this.output.selectAll = this.data.allIndeterminated\n      ? 'indeterminated'\n      : this.data.selectAll\n    this.output.cookieGroups = []\n    this.data.cookieGroups.forEach((groupData) => {\n      const cookies = []\n      groupData.cookieList.forEach((cookieData) => {\n        cookies.push({\n          cookieId: cookieData.cookieId,\n          cookieSelected: cookieData.cookieSelected,\n        })\n      })\n      this.output.cookieGroups.push({\n        cookieList: cookies,\n        groupId: groupData.groupId,\n        groupSelected: groupData.groupIndeterminated\n          ? 'indeterminated'\n          : groupData.groupSelected,\n      })\n    })\n    return JSON.stringify(this.output)\n  }\n\n  static createCookiebar(json, callback) {\n    const brCookiebar = document.createElement('div')\n    brCookiebar.classList.add('br-cookiebar', 'default', 'd-none')\n    brCookiebar.setAttribute('tabindex', 1)\n\n    document.body.appendChild(brCookiebar)\n\n    const params = {\n      callback,\n      component: brCookiebar,\n      json,\n      lang: 'pt-br',\n      mode: 'default',\n      name: 'br-cookiebar',\n    }\n\n    return new BRCookiebar(params)\n  }\n}\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","POLITICS_BUTTON","ACCEPT_BUTTON","ACTION_BUTTONS","CLOSE_BUTTON","CONTAINER_FLUID","WRAPPER","MODAL_FOOTER","GROUP_INFO","COOKIE_CARD","BROAD_ALERT","GROUP_ALERT","COOKIE_ALERT","BR_CHECKBOX","BR_SWITCH","CHECKBOX","PARENT_CHECKBOX","COOKIES_CHECKED","GROUP_BUTTON","GROUP_NAME","GROUP_SIZE","BUTTON_ICON","BRCookiebar","constructor","name","component","json","lang","mode","callback","this","data","CookiebarData","templates","CookiebarTemplates","_setUp","_buildCookiebar","_setBehavior","_showCookiebar","innerHTML","setGlobalContentArea","_setAcceptButtonBehavior","_setPoliticsButtonBehavior","_setCloseButtonBehavior","_setToggleGroupBehavior","_setCheckboxBehavior","_setSelectionBehavior","_setWindowResizeBehavior","acceptButton","querySelector","selectors","addEventListener","_hideCookiebar","document","body","style","overflowY","_setOutputJSON","event","key","classList","contains","focus","_setActionButtonResponsive","querySelectorAll","forEach","politicsButton","add","remove","_setOpenView","closeButton","_setDefaultView","window","button","matchMedia","matches","clickable","_handleToggleGroupClick","bind","element","_getParentElementByClass","currentTarget","nextElementSibling","check","setAttribute","_setGroupAttributes","_toggleIcon","_scrollUp","trigger","checkgroupBehavior","Checkgroup","setBehavior","checkbox","_controlSelection","segment","id","split","_setCheckAllBehavior","_setCheckgroupBehavior","_setCheckCookieBehavior","selectAll","checked","allIndeterminated","hasAttribute","_displayBroadAlertMessage","groupIndex","cookieGroups","groupSelected","groupIndeterminated","cookieList","cookieData","cookieIndex","cookieOptOut","cookieSelected","_displayCookieAlertMessage","_displayGroupAlertMessage","broadAlert","allAlertMessage","group","groupAlert","groupAlertMessage","cookie","cookieAlert","alertMessage","className","parent","parentNode","oldIcon","newIcon","icon","label","item","setTimeout","scrollIntoView","behavior","block","wrapper","containerFluid","modalFooter","padding","getComputedStyle","getPropertyValue","match","height","innerHeight","offsetHeight","removeAttribute","output","groupData","cookies","push","cookieId","groupId","JSON","stringify","static","brCookiebar","createElement","appendChild","params"],"sourceRoot":""}