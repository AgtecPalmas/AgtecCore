{"version":3,"file":"components/input/input.min.js","mappings":"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","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/input/input.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","/** Classe para instanciar um objeto BRInput*/\nclass BRInput {\n  /**\n   * Instancia do objeto\n   * @param {string} name - Nome do componente em minúsculo\n   * @param {object} component - Objeto referenciando a raiz do componente DOM\n   */\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this._currentFocus = -1\n    this._setBehavior()\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   */\n  _setBehavior() {\n    this._setPasswordViewBehavior()\n    this._setAutocompleteBehavior()\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   */\n  _setPasswordViewBehavior() {\n    for (const inputPassword of this.component.querySelectorAll(\n      'input[type=\"password\"]'\n    )) {\n      if (!inputPassword.disabled) {\n        for (const buttonIcon of inputPassword.parentNode.querySelectorAll(\n          '.br-button'\n        )) {\n          buttonIcon.addEventListener(\n            'click',\n            (event) => {\n              this._toggleShowPassword(event)\n            },\n            false\n          )\n        }\n      }\n    }\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   * @param {event} event - referência ao elemento que dispara a ação\n   */\n  _toggleShowPassword(event) {\n    for (const icon of event.currentTarget.querySelectorAll('.fas')) {\n      if (icon.classList.contains('fa-eye')) {\n        icon.classList.remove('fa-eye')\n        icon.classList.add('fa-eye-slash')\n        for (const input of this.component.querySelectorAll(\n          'input[type=\"password\"]'\n        )) {\n          input.setAttribute('type', 'text')\n        }\n      } else if (icon.classList.contains('fa-eye-slash')) {\n        icon.classList.remove('fa-eye-slash')\n        icon.classList.add('fa-eye')\n        for (const input of this.component.querySelectorAll(\n          'input[type=\"text\"]'\n        )) {\n          input.setAttribute('type', 'password')\n        }\n      }\n    }\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   */\n  _setAutocompleteBehavior() {\n    for (const inputAutocomplete of this.component.querySelectorAll(\n      'input.search-autocomplete'\n    )) {\n      inputAutocomplete.addEventListener(\n        'input',\n        (event) => {\n          this._clearSearchItems()\n          this._buildSearchItems(event.currentTarget)\n        },\n        false\n      )\n      inputAutocomplete.addEventListener(\n        'keydown',\n        (event) => {\n          this._handleArrowKeys(event)\n        },\n        false\n      )\n    }\n  }\n\n  /**\n   * Monta os items de busca para o elemento input\n   * @private\n   * @param {object} element - referencia ao elemento input\n   */\n  _buildSearchItems(element) {\n    const searchList = window.document.createElement('div')\n    searchList.setAttribute('class', 'search-items')\n    this.component.appendChild(searchList)\n    if (element.value !== '') {\n      for (const data of this.dataList) {\n        if (\n          data.substr(0, element.value.length).toUpperCase() ===\n          element.value.toUpperCase()\n        ) {\n          const item = window.document.createElement('div')\n          item.innerHTML = `<strong>${data.substr(\n            0,\n            element.value.length\n          )}</strong>`\n          item.innerHTML += data.substr(element.value.length)\n          item.innerHTML += `<input type=\"hidden\" value=\"${data}\">`\n          item.addEventListener(\n            'click',\n            (event) => {\n              for (const input of event.currentTarget.querySelectorAll(\n                'input[type=\"hidden\"]'\n              )) {\n                element.value = input.value\n              }\n              this._clearSearchItems()\n            },\n            false\n          )\n          searchList.appendChild(item)\n        }\n      }\n    } else {\n      this._clearSearchItems()\n    }\n  }\n\n  /**\n   * Limpa elementos da busca\n   * @private\n   */\n  _clearSearchItems() {\n    for (const searchItems of this.component.querySelectorAll(\n      '.search-items'\n    )) {\n      for (const item of searchItems.querySelectorAll('div')) {\n        searchItems.removeChild(item)\n      }\n      this.component.removeChild(searchItems)\n    }\n  }\n\n  /**\n   * Define comportamentos do teclado\n   * @private\n   * @param {event} event - referência ao elemento que dispara a ação do teclado\n   */\n  _handleArrowKeys(event) {\n    switch (event.keyCode) {\n      case 13:\n        if (this._currentFocus > -1) {\n          event.preventDefault()\n          for (const searchItems of this.component.querySelectorAll(\n            '.search-items'\n          )) {\n            for (const itemActive of searchItems.querySelectorAll(\n              'div.is-active'\n            )) {\n              itemActive.click()\n            }\n          }\n          this._currentFocus = -1\n        }\n        break\n      case 38:\n        if (this._currentFocus > 0) {\n          this._currentFocus -= 1\n        }\n        this._switchFocus()\n        break\n      case 40:\n        for (const searchItems of this.component.querySelectorAll(\n          '.search-items'\n        )) {\n          if (\n            this._currentFocus <\n            searchItems.querySelectorAll('div').length - 1\n          ) {\n            this._currentFocus += 1\n          }\n        }\n        this._switchFocus()\n        break\n      default:\n        break\n    }\n  }\n\n  /**\n   * Muda o foco do item de busca\n   * @private\n   */\n  _switchFocus() {\n    for (const searchItems of this.component.querySelectorAll(\n      '.search-items'\n    )) {\n      for (const [index, item] of searchItems\n        .querySelectorAll('div')\n        .entries()) {\n        if (index === this._currentFocus) {\n          item.classList.add('is-active')\n        }\n        if (index !== this._currentFocus) {\n          item.classList.remove('is-active')\n        }\n      }\n    }\n  }\n\n  /**\n   * Preenche lista de dados\n   * @private\n   * @param {string[]} dataList - Lista de dados\n   */\n  setAutocompleteData(dataList) {\n    this.dataList = dataList\n  }\n}\n\nexport default BRInput\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","BRInput","constructor","name","component","this","_currentFocus","_setBehavior","_setPasswordViewBehavior","_setAutocompleteBehavior","inputPassword","querySelectorAll","disabled","buttonIcon","parentNode","addEventListener","event","_toggleShowPassword","icon","currentTarget","classList","contains","remove","add","input","setAttribute","inputAutocomplete","_clearSearchItems","_buildSearchItems","_handleArrowKeys","element","searchList","window","document","createElement","appendChild","value","data","dataList","substr","length","toUpperCase","item","innerHTML","searchItems","removeChild","keyCode","preventDefault","itemActive","click","_switchFocus","index","entries","setAutocompleteData"],"sourceRoot":""}