{"version":3,"file":"components/step/step.min.js","mappings":"CAAA,SAAUA,EAAiCC,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,OAAQ,GAAIH,GACO,iBAAZC,QACdA,QAAc,KAAID,IAElBD,EAAW,KAAIC,GAChB,CATD,CASGK,MAAM,I,2BCRT,MAAMC,EACJC,YAAYC,EAAMC,GAQhBC,KAAKF,KAAOA,EACZE,KAAKD,UAAYA,EACjBC,KAAKC,cAAgB,EACrBD,KAAKE,WAAa,CAEhBC,SAAUH,KAAKD,UACfK,cAAe,gBACfC,cAAe,oBACfC,UAAWN,KAAKD,UAAUQ,iBAAiB,uBAQ7CP,KAAKQ,iBAAmB,CAACC,EAASC,KAChCD,EAAQE,SAASC,IACfA,EAAKC,gBAAgBH,EAAQ,GAC9B,EASHV,KAAKc,WAAa,CAACF,EAAMG,KACvB,IAAIC,EAAcJ,EAClB,MAAQI,EAAYC,UAAUC,SAASH,IACrCC,EAAcA,EAAYG,WAE5B,OAAOH,GAOThB,KAAKoB,cAAiBR,GACbS,MAAMC,KAAKtB,KAAKE,WAAWI,WAAWiB,QAAQX,GAMvDZ,KAAKwB,cAAgB,SAAUC,GAC7BzB,KAAKQ,iBAAiBR,KAAKE,WAAWI,UAAW,UACjDN,KAAKE,WAAWI,UAAUK,SAAQ,CAACC,EAAMc,KACnCA,IAAUD,IACZb,EAAKC,gBAAgB,YACrBD,EAAKe,aAAa,SAAU,IAC9B,IAEF3B,KAAKC,cAAgBwB,CACvB,EAKAzB,KAAK4B,YAAc,KACjB5B,KAAKE,WAAWI,UAAUK,SAAQ,CAACC,EAAMc,KACvC,MAAMG,EAAMjB,EAAKkB,cAAc,cACzBC,EAAO/B,UAA6C,SAA7CA,KAAKD,UAAUiC,aAAa,aAEvCpB,EAAKe,aACH,WACA,GAAGD,EAAQ,KAAK1B,KAAKE,WAAWI,UAAU2B,UAEnCJ,EACTjB,EAAKe,aAAa,WAAY,IACzBf,EAAKe,aAAa,WAAYD,EAAQ,EAAC,GAC/C,EAMH1B,KAAKkC,QAAWT,IACd,MAAMU,EAAaV,GAAOzB,KAAKE,WAAWI,UAAU2B,OAASR,EAAM,EAAI,EACvEzB,KAAKwB,cAAcW,EAAU,EAG/BnC,KAAKoC,cACP,CAMAA,eACEpC,KAAKE,WAAWC,SAASkC,iBAAiB,SAAUC,IAClD,MAAMC,EAAcD,EAAEE,OACtB,IAAKD,EAAYtB,UAAUC,SAAS,GAAGlB,KAAKE,WAAWG,iBAErD,YADAiC,EAAEE,OAAOrB,WAAWsB,QAGtB,MAAMxC,EAAgBD,KAAKoB,cAAcmB,GACzCvC,KAAKwB,cAAcvB,EAAa,IAGlCD,KAAK4B,cACD5B,KAAKD,UAAU2C,aAAa,gBAC9B1C,KAAKkC,QAAQlC,KAAKD,UAAUiC,aAAa,iBACpChC,KAAKkC,QAAQ,IAGjBlC,KAAKD,UAAUkB,UAAUC,SAAS,aAClClB,KAAKD,UAAU2C,aAAa,cAIjC,EAGF,MAAe,I","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/step/step.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","/** Classe para instanciar um objeto BRStep */\nclass BRStep {\n  constructor(name, component) {\n    /**\n     * Instancia do componente\n     * @param {string} name - Nome do componente em minúsculo\n     * @param {object} component - Objeto referenciando a raiz do componente DOM\n     * @property {number} activeStepNum - Número do palco ativo\n     * @property {array} DOMStrings - instancia dos elementos internos do componente\n     */\n    this.name = name\n    this.component = component\n    this.activeStepNum = 0\n    this.DOMstrings = {\n      // stepsBar: this.component.querySelector('.step-progress'),\n      stepsBar: this.component,\n      stepsBarClass: 'step-progress',\n      stepsBtnClass: 'step-progress-btn',\n      stepsBtns: this.component.querySelectorAll('.step-progress-btn'),\n    }\n\n    /**\n     * Remove uma classe css de uma lista de elementos\n     * @param {object} elemSet - Lista de elementos\n     * @param {string} button - Nome do atributo\n     */\n    this.removeAttributes = (elemSet, attrName) => {\n      elemSet.forEach((elem) => {\n        elem.removeAttribute(attrName)\n      })\n    }\n\n    /**\n     * Retorna o nó pai do elemento com o nome da classe específica\n     * @param {object} elem - Referência ao elemento\n     * @param {string} parentClass - Nome da classe pai\n     * @returns {object} Referência ao elemento pai\n     */\n    this.findParent = (elem, parentClass) => {\n      let currentNode = elem\n      while (!currentNode.classList.contains(parentClass)) {\n        currentNode = currentNode.parentNode\n      }\n      return currentNode\n    }\n\n    /** Retorna o número do passo de referencia\n     * @param {object} elem - Referência ao botão de passo\n     * @returns {number} Número do passo\n     */\n    this.getActiveStep = (elem) => {\n      return Array.from(this.DOMstrings.stepsBtns).indexOf(elem)\n    }\n\n    /** Define o número do passo de referência como ativo\n     * @param {number} num - numero do passo de referência\n     */\n    this.setActiveStep = function (num) {\n      this.removeAttributes(this.DOMstrings.stepsBtns, 'active')\n      this.DOMstrings.stepsBtns.forEach((elem, index) => {\n        if (index === num) {\n          elem.removeAttribute('disabled')\n          elem.setAttribute('active', '')\n        }\n      })\n      this.activeStepNum = num\n    }\n\n    /**\n     * Mostra os números dos rótulos dos passos\n     */\n    this.setStepsNum = () => {\n      this.DOMstrings.stepsBtns.forEach((elem, index) => {\n        const img = elem.querySelector('.step-icon')\n        const text = this.component.getAttribute('data-type') === 'text'\n        if (text) {\n          elem.setAttribute(\n            'step-num',\n            `${index + 1}/${this.DOMstrings.stepsBtns.length}`\n          )\n        } else if (img) {\n          elem.setAttribute('step-num', '')\n        } else elem.setAttribute('step-num', index + 1)\n      })\n    }\n\n    /** Testa se o passo está dentro do escopo e o define como ativo\n     * @param {number} num - step number\n     */\n    this.setStep = (num) => {\n      const activeStep = num <= this.DOMstrings.stepsBtns.length ? num - 1 : 0\n      this.setActiveStep(activeStep)\n    }\n\n    this._setBehavior()\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   */\n  _setBehavior() {\n    this.DOMstrings.stepsBar.addEventListener('click', (e) => {\n      const eventTarget = e.target\n      if (!eventTarget.classList.contains(`${this.DOMstrings.stepsBtnClass}`)) {\n        e.target.parentNode.click()\n        return\n      }\n      const activeStepNum = this.getActiveStep(eventTarget)\n      this.setActiveStep(activeStepNum)\n    })\n\n    this.setStepsNum()\n    if (this.component.hasAttribute('data-initial')) {\n      this.setStep(this.component.getAttribute('data-initial'))\n    } else this.setStep(1)\n\n    if (\n      !this.component.classList.contains('vertical') &&\n      !this.component.hasAttribute('data-scroll')\n    ) {\n      // const stepsWidth = Math.round(100 / this.DOMstrings.stepsBtns.length) - 0.5\n    }\n  }\n}\n\nexport default BRStep\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","BRStep","constructor","name","component","this","activeStepNum","DOMstrings","stepsBar","stepsBarClass","stepsBtnClass","stepsBtns","querySelectorAll","removeAttributes","elemSet","attrName","forEach","elem","removeAttribute","findParent","parentClass","currentNode","classList","contains","parentNode","getActiveStep","Array","from","indexOf","setActiveStep","num","index","setAttribute","setStepsNum","img","querySelector","text","getAttribute","length","setStep","activeStep","_setBehavior","addEventListener","e","eventTarget","target","click","hasAttribute"],"sourceRoot":""}