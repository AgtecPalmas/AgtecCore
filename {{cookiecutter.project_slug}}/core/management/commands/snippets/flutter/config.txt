/// [Arquivo gerado automatimante pelo AgtecCore]
///
/// [Travar o arquivo]
/// Caso deseje "travar" o arquivo para não ser parseado novamente
/// pelo manage do Django adicione um # antes da palavra abaixo
/// FileLocked
///

import 'package:flutter/material.dart';

const heightAppBarPage = 22.0;
const marginTopCustomAppBar = 12.0;
const marginHorizontalSectionsDataPage = 12.0;

// Definindo o width e o height do ScreenUtil Extensions
const double widthScreenUtil = 390;
const double heightScreenUtil = 844;

// Constante para determinar se a navegação na App será utilizando o Bottom NavigationBar
const bool enabledBottomNavigationBar = false;

// Chave para determinar se a versão está em desenvolvimento ou produção
const bool releaseVersion = false;

// URI para desenvolvimento
// URI definida do settings do Projeto Django -> $DjangoAPIPath$
// TODO - Altere o valor dessa constante para o IP do projeto Django
const String uriDeveloper = "";

// Para acesso sem ser via https
// Acesse o arquivo AndroidManifest.xml no caminho: seu_projeto/android/app/src/main e adicione
// a chave a seguir: android:usesCleartextTraffic="true" na tag application, vide exemplo a seguir
/*
    <application
        android:name="io.flutter.app.FlutterApplication"
        android:label="seu_projeto"
        android:usesCleartextTraffic="true"
        android:icon="@mipmap/ic_launcher">
*/

// URI para produção
const String uriRelease = "";

// URL para os termos de uso
const String urlTermoUso = "";

// Área para configuração das modalidades de registro e login
const bool enabledFacebookAccount = false;
const bool enabledGoogleAccount = false;
const bool enabledEmailAccount = false;
const bool enabledOTPAccount = false;

class Config {
  static const uri = releaseVersion ? uriRelease : uriDeveloper;
  static const uriAuth = "";

  // TODO - Adicionar aqui o token DRF caso esteja utilizando o Django Rest Framework.
  static const DRFToken = "Token ";

  // TODO - Adicionar as credenciais caso esteja utilizando FastAPI.
  // Dados de acesso à camada FastAPI
  static const fastAPIUserDevelopment = "";
  static const fastAPIPasswordDevelopment = "";

  static const String uri_media = "media/";
  static const String app_title = "App Flutter";
  static const bool usingURL = false;
  static const double marginHead = 0.25;
}

///
/// Customizando o Thema do aplicativo Flutter
///
class CustomTheme {
 //Colors for theme
  static Color defaultColor = Colors.black;
  static Color lightPrimary = const Color(0xfffcfcff);
  static Color lightAccent = Colors.blue;
  static Color lightBG = const Color(0xfffcfcff);
  static Color darkPrimary = Colors.black;
  static Color darkAccent = Colors.blueGrey;
  static Color darkBG = Colors.black;

  //Colors for main cards theme light and dark
  static Color mainCardLightIconColor = Colors.black38;
  static Color mainCardLightTextColor = Colors.black38;
  static Color mainCardLightBackgroundColor = Colors.white;
  static Color mainCardLightShadowColor = Colors.black38;
  static Color textStyleDefaultColor = Color(0xFF4a5c6a);

  // Classe estática para configuração do TextStyle padrão
  static final _defaultTextStyle = TextStyle(color: textStyleDefaultColor);

static final _textThemeDefault = TextTheme(
    headline1: _defaultTextStyle,
    headline2: _defaultTextStyle,
    headline3: _defaultTextStyle,
    headline4: _defaultTextStyle,
    headline5: _defaultTextStyle,
    headline6: _defaultTextStyle,
    subtitle1: _defaultTextStyle,
    subtitle2: _defaultTextStyle,
    bodyText1: _defaultTextStyle,
    bodyText2: _defaultTextStyle,
    caption: _defaultTextStyle,
    button: _defaultTextStyle,
    overline: _defaultTextStyle,
  );

  static ThemeData lightTheme = ThemeData(
    backgroundColor: lightBG,
    primaryColor: lightPrimary,
    scaffoldBackgroundColor: lightBG,
    appBarTheme: AppBarTheme(
      elevation: 0,
      toolbarTextStyle: TextTheme(
        subtitle1: TextStyle(color: lightBG, fontSize: 18.0, fontWeight: FontWeight.w800),
      ).bodyText2,
      titleTextStyle: TextTheme(
        subtitle1: TextStyle(color: lightBG, fontSize: 18.0, fontWeight: FontWeight.w800),
      ).headline6,
    ),
    colorScheme: ColorScheme.fromSwatch().copyWith(
      secondary: lightAccent,
    ),
    textTheme: _textThemeDefault
  );

  static ThemeData darkTheme = ThemeData(
    brightness: Brightness.dark,
    backgroundColor: darkBG,
    primaryColor: darkPrimary,
    scaffoldBackgroundColor: darkBG,
    appBarTheme: AppBarTheme(
      elevation: 0,
      toolbarTextStyle: TextTheme(
        subtitle1: TextStyle( color: lightBG, fontSize: 18.0, fontWeight: FontWeight.w800),
      ).bodyText2,
      titleTextStyle: TextTheme(
        subtitle1: TextStyle(color: lightBG, fontSize: 18.0, fontWeight: FontWeight.w800),
      ).headline6,
    ),
    colorScheme: ColorScheme.fromSwatch().copyWith(
      secondary: darkAccent,
    ),
    textTheme: _textThemeDefault
  );
}