// #FileLocked

import 'dart:developer' as developer;

import 'package:flutter/material.dart';

const heightAppBarPage = 22.0;
const marginTopCustomAppBar = 12.0;
const marginHorizontalSectionsDataPage = 12.0;

// Constante para determinar se a navegação na App será utilizando o Bottom NavigationBar
const bool enabledBottomNavigationBar = false;

// Chave para determinar se a versão está em desenvolvimento ou produção
const bool releaseVersion = false;

// URI para desenvolvimento
// URI definida do settings do Projeto Django -> $DjangoAPIPath$
// TODO Altere o valor dessa constante para o IP do projeto Django
const String uriDeveloper = "http://127.0.0.1:8080/";

// TODO Ajustando o projeto Android para aceitar conexão sem https na comunicação via HTTP
// Acesse o arquivo AndroidManifest.xml no caminho: seu_projeto/android/app/src/main e adicione
// a chave a seguir: android:usesCleartextTraffic="true" na tag application, vide exemplo a seguir
/*
    <application
        android:name="io.flutter.app.FlutterApplication"
        android:label="seu_projeto"
        android:usesCleartextTraffic="true"
        android:icon="@mipmap/ic_launcher">
*/

// URI para produção
const String uriRelease = "";

// URL para os termos de uso
const String urlTermoUso = "";

// Área para configuração das modalidades de registro e login
const bool enabledFacebookAccount = false;
const bool enabledGoogleAccount = false;
const bool enabledEmailAccount = false;
const bool enabledOTPAccount = false;

class Config {
  static const uri = releaseVersion ? uriRelease : uriDeveloper;
  static const uriAuth = "";

  // TODO Adicionar aqui o token para ambiente de desenvolvimento.
  /// O token abaixo é o mesmo do super usuário do projeto django, caso você tenha executado o comando
  /// python mcok_superuser.py lá no projeto Django
  static const DRFToken = "Token 2b817ddbb5b974e5a451a8156963de586d72079e";

  static const String uri_media = "media/";
  static const String app_title = "App Flutter";
  static const bool usingURL = false;
  static const double marginHead = 0.25;
}

class CustomTheme{
 //Colors for theme
  static Color defaultColor = Colors.black;
  static Color lightPrimary = const Color(0xfffcfcff);
  static Color lightAccent = Colors.blue;
  static Color lightBG = const Color(0xfffcfcff);
  static Color darkPrimary = Colors.black;
  static Color darkAccent = Colors.blueGrey;
  static Color darkBG = Colors.black;

  //Colors for main cards theme light and dark
  static Color mainCardLightBorderColor = Colors.black87;
  static Color mainCardLightIconColor = Colors.black38;
  static Color mainCardLightTextColor = Colors.black38;
  static Color mainCardLightBackgroundColor = Colors.white;
  static Color mainCardLightShadowColor = Colors.black38;
  static Color mainTextFieldLightColor = Colors.black45;
  static Color mainButtonBgLightColor = Colors.black38;
  static Color mainButtonFontLightColor = Colors.white;

  static Color mainCardDarkBorderColor = Colors.grey[700] as Color;
  static Color mainCardDarkIconColor = Colors.grey[300] as Color;
  static Color mainCardDarkTextColor = Colors.grey[300] as Color;
  static Color mainCardDarkBackgroundColor = Colors.grey[850] as Color;
  static Color mainCardDarkShadowColor = Colors.grey[900] as Color;
  static Color mainTextFieldDarkColor = Colors.grey[600] as Color;
  static Color mainButtonBgDarkColor = Colors.grey[600] as Color;
  static Color mainButtonFontDarkColor = Colors.black;

  static ThemeData lightTheme = ThemeData(
    backgroundColor: lightBG,
    primaryColor: lightPrimary,
    scaffoldBackgroundColor: lightBG,
    appBarTheme: AppBarTheme(
      elevation: 0,
      toolbarTextStyle: TextTheme(
        subtitle1: TextStyle(
          color: lightBG,
          fontSize: 18.0,
          fontWeight: FontWeight.w800,
        ),
      ).bodyText2,
      titleTextStyle: TextTheme(
        subtitle1: TextStyle(
          color: lightBG,
          fontSize: 18.0,
          fontWeight: FontWeight.w800,
        ),
      ).headline6,
    ),
    colorScheme: ColorScheme.fromSwatch().copyWith(
      secondary: lightAccent,
    ),
  );

  static ThemeData darkTheme = ThemeData(
    brightness: Brightness.dark,
    backgroundColor: darkBG,
    primaryColor: darkPrimary,
    scaffoldBackgroundColor: darkBG,
    appBarTheme: AppBarTheme(
      elevation: 0,
      toolbarTextStyle: TextTheme(
        subtitle1: TextStyle(
          color: lightBG,
          fontSize: 18.0,
          fontWeight: FontWeight.w800,
        ),
      ).bodyText2,
      titleTextStyle: TextTheme(
        subtitle1: TextStyle(
          color: lightBG,
          fontSize: 18.0,
          fontWeight: FontWeight.w800,
        ),
      ).headline6,
    ),
    colorScheme: ColorScheme.fromSwatch().copyWith(
      secondary: darkAccent,
    ),
  );
}