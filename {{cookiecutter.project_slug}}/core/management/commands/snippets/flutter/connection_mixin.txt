///
/// [Arquivo gerado automaticamente pelo NuvolsCore]
///
/// [Arquivo travado]
/// Para evitar que o arquivo seja reescrito acidentalmente,
/// o mesmo encontra-se "travado", para destravar remova o # da linha abaixo.
///
/// #FileLocked
///

import 'package:connectivity_plus/connectivity_plus.dart';
import 'package:flutter/material.dart';
import 'package:top_snackbar_flutter/custom_snack_bar.dart';
import 'package:top_snackbar_flutter/top_snack_bar.dart';

mixin ConnectionMixin<T extends StatefulWidget> on State<T> {
  Future<void> checarConexao() async {
    final List<ConnectivityResult> connectivityResult = await (Connectivity().checkConnectivity());
    if (connectivityResult.contains(ConnectivityResult.mobile)) {
      // Mobile network available.
      _showInfo('Conexão com a internet restabelecida');
    } else if (connectivityResult.contains(ConnectivityResult.wifi)) {
      _showInfo('Conexão com a internet restabelecida');
      // Wi-fi is available.
      // Note for Android:
      // When both mobile and Wi-Fi are turned on system will return Wi-Fi only as active network type
    } else if (connectivityResult.contains(ConnectivityResult.ethernet)) {
      _showInfo('Conexão com a internet restabelecida');
      // Ethernet connection available.
    } else if (connectivityResult.contains(ConnectivityResult.vpn)) {
      _showInfo('Conexão com a internet restabelecida');
      // Vpn connection active.
      // Note for iOS and macOS:
      // There is no separate network interface type for [vpn].
      // It returns [other] on any device (also simulator)
    } else if (connectivityResult.contains(ConnectivityResult.bluetooth)) {
      _showInfo('Conexão bluetooth restabelecida');
      // Bluetooth connection available.
    } else if (connectivityResult.contains(ConnectivityResult.other)) {
      _showInfo('Conexão com a internet restabelecida');
      // Connected to a network which is not in the above mentioned networks.
    } else if (connectivityResult.contains(ConnectivityResult.none)) {
      // No available network types
      _showError('Sem conexão com a internet');
    }
  }

  void _showError(String message) {
    showTopSnackBar(Overlay.of(context), CustomSnackBar.error(message: message));
  }

  void _showInfo(String message) {
    showTopSnackBar(Overlay.of(context), CustomSnackBar.info(message: message));
  }
}